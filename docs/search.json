[{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"Biological Entity Dictionary (BED) developed address three main challenges. first one related completeness identifier mappings. Indeed, direct mapping information provided different systems always complete can enriched mappings provided resources. interestingly, direct mappings identified resources can indirectly inferred using mappings third reference. example, many human Ensembl gene ID directly mapped Entrez gene ID mappings can inferred using respective mappings HGNC ID. second challenge related mapping deprecated identifiers. Indeed, entity identifiers can change one resource release another. identifier history provided resources, Ensembl NCBI, generally used mapping tools. third challenge related automation mapping process according relationships biological entities interest. Indeed, mapping gene protein ID scopes done way two scopes regarding gene ID. Also, converting identifiers different organisms possible using gene orthologs information. document shows use BED (Biological Entity Dictionary) R package get explore mapping identifiers biological entities (). package provides way connect BED Neo4j database relationships identifiers different sources recorded.","code":""},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"citing-bed","dir":"Articles","previous_headings":"Introduction","what":"Citing BED","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"package underlying research published peer reviewed article: Patrice Godard Jonathan van Eyll (2018). BED: Biological Entity Dictionary based graph data model (version 3; peer review: 2 approved). F1000Research, 7:195.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"dependencies","dir":"Articles","previous_headings":"Introduction > Installation","what":"Dependencies","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"BED package depends following packages available CRAN repository: neo2R visNetwork dplyr readr stringr utils shiny DT miniUI rstudioapi packages must installed installing BED.","code":""},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"installation-from-github","dir":"Articles","previous_headings":"Introduction > Installation","what":"Installation from github","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"","code":"devtools::install_github(\"patzaw/BED\")"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"possible-issue-when-updating-from-releases-1-3-0","dir":"Articles","previous_headings":"Introduction > Installation","what":"Possible issue when updating from releases <= 1.3.0","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"get error like following… … remove BED folder located :","code":"Error: package or namespace load failed for ‘BED’:  .onLoad failed in loadNamespace() for 'BED', details:   call: connections[[connection]][[\"cache\"]]   error: subscript out of bounds file.exists(file.path(Sys.getenv(\"HOME\"), \"R\", \"BED\"))"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"connection","dir":"Articles","previous_headings":"Introduction","what":"Connection","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"using BED, connection needs established underlying Neo4j DB. url, username password adapted. remember parameter can set TRUE order save connection information automatically used next time connectToBed() function called. default, parameter set FALSE comply CRAN policies. Saved connection can managed lsBedConnections() forgetBedConnection() functions. useCache parameter default set FALSE comply CRAN policies. However, recommended set TRUE improve speed recurrent queries: results large queries saved locally file. connection can checked following way. verbose parameter set TRUE, URL content version displayed messages. following function list saved connections. connection param connectToBed function can used connect saved connection last one.","code":"library(BED) connectToBed(url=\"localhost:5454\", remember=FALSE, useCache=FALSE) checkBedConn(verbose=TRUE) ## https://genodesy.org/BED ## BED ## Genodesy-Human ## 2024.05.15 ## Cache ON ## [1] TRUE ## attr(,\"dbVersion\") ##   name       instance    version ## 1  BED Genodesy-Human 2024.05.15 lsBedConnections()"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"data-model","dir":"Articles","previous_headings":"Introduction","what":"Data model","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"BED underlying data model can shown time using following command.","code":"showBedDataModel()"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"direct-calls","dir":"Articles","previous_headings":"Introduction","what":"Direct calls","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"Cypher queries can run directly Neo4j database using cypher function neo2R package bedCall function.","code":"results <- bedCall(     cypher,     query=prepCql(        'MATCH (n:BEID)',        'WHERE n.value IN $values',        'RETURN DISTINCT n.value AS value, labels(n), n.database'     ),     parameters=list(values=c(\"10\", \"100\")) ) results ##   value      labels(n) n.database ## 1    10 BEID || GeneID EntrezGene ## 2   100 BEID || GeneID EntrezGene ## 3   100 BEID || GeneID       HGNC"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"feeding-the-database","dir":"Articles","previous_headings":"Introduction","what":"Feeding the database","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"Many functions provided within package build BED database instance. functions exported order avoid use interacting BED normally. Information get instance BED neo4j database provided : https://github.com/patzaw/BED#bed-database-instance-available---docker-image https://github.com/patzaw/BED#build--bed-database-instance can adapted user needs.","code":""},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"caching","dir":"Articles","previous_headings":"Introduction","what":"Caching","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"part relevant useCache parameter set TRUE calling connectToBed(). Functions BED package used retrieve thousands identifiers can take time (generally seconds) returning result. Thus kind query, query run relevant ID DB thanks cache system implemented package queries different filters much faster following times. default cache flushed system detect inconsistencies BED database. However, can also manualy flushed needed using clearBedCache() function. Queries already cache can listed using lsBedCache() function also return occupied disk space.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"biological-entities","dir":"Articles","previous_headings":"Exploring available data","what":"Biological entities","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"BED organized around central concept Biological Entity (). supported types can listed. organized according related . example Gene is_expressed_as Transcript. organization allows find first upstream common set .","code":"listBe() ## [1] \"Gene\"       \"Transcript\" \"Peptide\"    \"Object\" firstCommonUpstreamBe(c(\"Object\", \"Transcript\")) ## [1] \"Gene\" firstCommonUpstreamBe(c(\"Peptide\", \"Transcript\")) ## [1] \"Transcript\""},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"organisms","dir":"Articles","previous_headings":"Exploring available data","what":"Organisms","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"Several organims can supported BED underlying database. can listed following way. Common names also supported corresponding taxonomic identifiers can retrieved. Conversely organism names corresponding taxonomic ID can listed.","code":"listOrganisms() ## [1] \"Danio rerio\"       \"Homo sapiens\"      \"Sus scrofa\"        ## [4] \"Mus musculus\"      \"Rattus norvegicus\" getOrgNames(getTaxId(\"human\")) ##   taxID                        name           nameClass ## 1  9606 Homo sapiens Linnaeus, 1758           authority ## 2  9606                       human genbank common name ## 3  9606                Homo sapiens     scientific name"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"identifiers-of-biological-entities","dir":"Articles","previous_headings":"Exploring available data","what":"Identifiers of biological entities","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"main aim BED allow mapping identifiers different sources Ensembl Entrez. Supported sources can listed following way supported organism. database gathering largest number specific type can also identified. Finally, getAllBeIdSources() function returns source databases identifiers whatever type.","code":"listBeIdSources(be=\"Transcript\", organism=\"human\") ##             database   nbBe   nbId         be ## 1 BEDTech_transcript 114302 114302 Transcript ## 2             RefSeq 270808 279118 Transcript ## 3     Ens_transcript 277147 288548 Transcript largestBeSource(be=\"Transcript\", organism=\"human\", restricted=TRUE) ## [1] \"Ens_transcript\""},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"experimental-platforms-and-probes","dir":"Articles","previous_headings":"Exploring available data","what":"Experimental platforms and probes","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"BED also supports experimental platforms provides mapping betweens probes identifiers (BEID). supported platforms can listed following way. getTargetedBe() function returns type specific platform focus.","code":"head(listPlatforms()) ##              name                                        description focus ## GPL6101   GPL6101        Illumina ratRef-12 v1.0 expression beadchip  Gene ## GPL6887   GPL6887        Illumina MouseWG-6 v2.0 expression beadchip  Gene ## GPL6947   GPL6947       Illumina HumanHT-12 V3.0 expression beadchip  Gene ## GPL10558 GPL10558       Illumina HumanHT-12 V4.0 expression beadchip  Gene ## GPL1355   GPL1355     [Rat230_2] Affymetrix Rat Genome 230 2.0 Array  Gene ## GPL1261   GPL1261 [Mouse430_2] Affymetrix Mouse Genome 430 2.0 Array  Gene getTargetedBe(\"GPL570\") ## [1] \"Gene\""},{"path":[]},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"retrieving-all-identifiers-from-a-source","dir":"Articles","previous_headings":"Managing identifiers","what":"Retrieving all identifiers from a source","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"identifiers organism BEs one source can retrieved. first column, id, corresponds identifiers source. column named according type (case Gene) corresponds internal identifier related . CAREFUL, INTERNAL ID STABLE USED REFERENCE. internal identifier useful identify BEIDS corresponding . following code can used overview redundancy. example can see Gene identified one EntrezGene ID. However many identified two ID; 32 even identified 10 EntrezGeneID. case, redundancies come ID history extracted Entrez. Legacy ID can excluded retrieved ID setting restricted parameter TRUE. code can used identify remaining redundancies. example can see allmost Gene identified one EntrezGene ID. However identified two ID. result comes BED database constructed according ID mapping provided different source databases. graph shows mapping done redundant EntrezGene IDs. issue mainly solved taking account ambigous mappings NCBI Entrez gene identifiers Ensembl gene identifier provided Ensembl. achieved using cleanDubiousXRef() function 2019.10.11 version BED-UCB-Human database.  way ID correspondances reported different source databases leads mapping ambiguity taken account comparing identifiers different databases. getBeIds() returns columns providing additional information id. function can used retrieved symbols probe identifiers.","code":"beids <- getBeIds(     be=\"Gene\", source=\"EntrezGene\", organism=\"human\",     restricted=FALSE ) dim(beids) ## [1] 216039      5 head(beids) ##     id preferred   Gene db.version db.deprecated ## 1 4535     FALSE 869296   20240516         FALSE ## 2 4536     FALSE 869300   20240516         FALSE ## 3 4512     FALSE 869306   20240516         FALSE ## 4 4513     FALSE 869309   20240516         FALSE ## 5 4509     FALSE 869311   20240516         FALSE ## 6 4508     FALSE 869312   20240516         FALSE sort(table(table(beids$Gene)), decreasing = TRUE) ##  ##      1      2      3      4      5      6      7      8      9     10     11  ## 178544   9711   3152   1026    400    154     89     46     24     11      9  ##     12     13     14     16     31  ##      6      2      2      1      1 ambId <- sum(table(table(beids$Gene)[which(table(beids$Gene)>=10)])) beids <- getBeIds(     be=\"Gene\", source=\"EntrezGene\", organism=\"human\",     restricted = TRUE ) dim(beids) ## [1] 193382      5 sort(table(table(beids$Gene)), decreasing = TRUE) ##  ##      1      2      3  ## 192979    194      5 eid <- beids$id[which(beids$Gene %in% names(which(table(beids$Gene)>=3)))][1] print(eid) ## [1] \"101927189\" exploreBe(id=eid, source=\"EntrezGene\", be=\"Gene\") %>%    visPhysics(solver=\"repulsion\")"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"preferred-identifier","dir":"Articles","previous_headings":"Managing identifiers > Retrieving all identifiers from a source","what":"Preferred identifier","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"BED database constructed according relationships identifiers provided different sources. Biological entities () identified clusters identifiers correspond directly indirectly (corresponds_to relationship). design can identified multiple identifiers (BEID) database shown . BEID often related alternate version entity. example, Ensembl provides different version (alternative sequences) chromosomes parts. genes also annotated alternative sequences. Uniprot unreviewed identifiers can correspond reviewed proteins. available kind information associated Attribute node relationship providing value attribute BEID. information can also used define BEID preferred identifier . example shows case MAPT gene annotated different version human chromosome 17.","code":"mapt <- convBeIds(    \"MAPT\", from=\"Gene\", from.source=\"Symbol\", from.org=\"human\",    to.source=\"Ens_gene\", restricted=TRUE ) exploreBe(    mapt[1, \"to\"],    source=\"Ens_gene\",    be=\"Gene\" ) getBeIds(    be=\"Gene\", source=\"Ens_gene\", organism=\"human\",    restricted=TRUE,    attributes=listDBAttributes(\"Ens_gene\"),    filter=mapt$to ) ##                id preferred    Gene db.version db.deprecated ## 1 ENSG00000186868      TRUE 5603384        112         FALSE ## 2 ENSG00000276155     FALSE 5603384        112         FALSE ## 3 ENSG00000277956     FALSE 5603384        112         FALSE ## 4         LRG_660     FALSE 5603384        112         FALSE ##                       seq_region ## 1           GRCh38 chromosome 17 ## 2 GRCh38 scaffold HSCHR17_1_CTG5 ## 3 GRCh38 scaffold HSCHR17_2_CTG5 ## 4                    lrg LRG_660"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"checking-identifiers","dir":"Articles","previous_headings":"Managing identifiers","what":"Checking identifiers","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"origin identifiers can guessed following. best guess returned list possible origins listed details attribute. origin identifiers already known, can also tested.","code":"oriId <- c(     \"17237\", \"105886298\", \"76429\", \"80985\", \"230514\", \"66459\",     \"93696\", \"72514\", \"20352\", \"13347\", \"100462961\", \"100043346\",     \"12400\", \"106582\", \"19062\", \"245607\", \"79196\", \"16878\", \"320727\",     \"230649\", \"66880\", \"66245\", \"103742\", \"320145\", \"140795\" ) idOrigin <- guessIdScope(oriId) print(idOrigin$be) ## [1] \"Gene\" print(idOrigin$source) ## [1] \"EntrezGene\" print(idOrigin$organism) ## [1] \"Mus musculus\" print(attr(idOrigin, \"details\")) ##     be     source     organism nb proportion ## 1 Gene EntrezGene Mus musculus 25       1.00 ## 2 Gene       HGNC Homo sapiens  3       0.12 ## 3 Gene        MGI Mus musculus  2       0.08 checkBeIds(ids=oriId, be=\"Gene\", source=\"EntrezGene\", organism=\"mouse\") checkBeIds(ids=oriId, be=\"Gene\", source=\"HGNC\", organism=\"human\") ## Warning in checkBeIds(ids = oriId, be = \"Gene\", source = \"HGNC\", organism = ## \"human\"): Could not find 22 IDs among 25!"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"identifier-annotation","dir":"Articles","previous_headings":"Managing identifiers","what":"Identifier annotation","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"Identifiers can annotated symbols names according available information. following code returns relevant symbol relevant name ID. Source URL can also generated getBeIdURL() function. possible symbols possible names ID can also retrieved using following functions. Also probes biological entities directly associated symbols names. elements can also annotated according information related relevant genes.","code":"toShow <- getBeIdDescription(     ids=oriId, be=\"Gene\", source=\"EntrezGene\", organism=\"mouse\" ) toShow$id <- paste0(     sprintf(         '<a href=\"%s\" target=\"_blank\">',         getBeIdURL(toShow$id, \"EntrezGene\")     ),     toShow$id,     '<a>' ) kable(toShow, escape=FALSE, row.names=FALSE) res <- getBeIdSymbols(     ids=oriId, be=\"Gene\", source=\"EntrezGene\", organism=\"mouse\",     restricted=FALSE ) head(res) ##          id        symbol canonical direct preferred  entity ## 1 105886298       Mtcp1nb     FALSE   TRUE      TRUE 2797892 ## 2 105886298       p8MTCP1     FALSE   TRUE      TRUE 2797892 ## 3 105886298          Cmc4      TRUE   TRUE      TRUE 2797892 ## 4     93696          YCL1     FALSE   TRUE      TRUE 2815578 ## 5     93696 2810406L04Rik     FALSE   TRUE      TRUE 2815578 ## 6     93696 2410152E03Rik     FALSE   TRUE      TRUE 2815578 res <- getBeIdNames(     ids=oriId, be=\"Gene\", source=\"EntrezGene\", organism=\"mouse\",     restricted=FALSE ) head(res) ##          id                                                    name direct ## 1 105886298                               C-X9-C motif containing 4   TRUE ## 2     93696                       chromatin accessibility complex 1   TRUE ## 3     72514              fibroblast growth factor binding protein 3   TRUE ## 4     12400                                core binding factor beta   TRUE ## 5     16878                              leukemia inhibitory factor   TRUE ## 6    245607 G protein-coupled receptor associated sorting protein 2   TRUE ##   preferred  entity ## 1      TRUE 2797892 ## 2      TRUE 2815578 ## 3      TRUE 2816491 ## 4      TRUE 2817153 ## 5      TRUE 2828063 ## 6      TRUE 2811916 someProbes <- c(     \"238834_at\", \"1569297_at\", \"213021_at\", \"225480_at\",     \"216016_at\", \"35685_at\", \"217969_at\", \"211359_s_at\" ) toShow <- getGeneDescription(     ids=someProbes, be=\"Probe\", source=\"GPL570\", organism=\"human\" ) kable(toShow, escape=FALSE, row.names=FALSE)"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"products-of-molecular-biology-processes","dir":"Articles","previous_headings":"Managing identifiers","what":"Products of molecular biology processes","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"BED data model beeing built fulfill molecular biology processes: is_expressed_as relationships correspond transcription process. is_translated_in relationships correspond translation process. codes_for fuzzy relationship allowing mapping genes object necessary corresonpding kind biological molecule. processes described different databases different level granularity. exemple, Ensembl provides possible transcripts gene specifying one canonical. following functions used retrieve direct products direct origins molecular biology processes.","code":"getDirectProduct(\"ENSG00000145335\", process=\"is_expressed_as\") ##             origin  osource         product        psource canonical ## 1  ENSG00000145335 Ens_gene ENST00000505199 Ens_transcript     FALSE ## 2  ENSG00000145335 Ens_gene ENST00000673766 Ens_transcript     FALSE ## 3  ENSG00000145335 Ens_gene ENST00000674129 Ens_transcript     FALSE ## 4  ENSG00000145335 Ens_gene ENST00000508895 Ens_transcript     FALSE ## 5  ENSG00000145335 Ens_gene ENST00000673718 Ens_transcript     FALSE ## 6  ENSG00000145335 Ens_gene ENST00000611107 Ens_transcript     FALSE ## 7  ENSG00000145335 Ens_gene ENST00000345009 Ens_transcript     FALSE ## 8  ENSG00000145335 Ens_gene ENST00000394986 Ens_transcript     FALSE ## 9  ENSG00000145335 Ens_gene ENST00000618500 Ens_transcript     FALSE ## 10 ENSG00000145335 Ens_gene ENST00000420646 Ens_transcript     FALSE ## 11 ENSG00000145335 Ens_gene ENST00000394989 Ens_transcript     FALSE ## 12 ENSG00000145335 Ens_gene ENST00000336904 Ens_transcript     FALSE ## 13 ENSG00000145335 Ens_gene ENST00000506244 Ens_transcript     FALSE ## 14 ENSG00000145335 Ens_gene ENST00000502987 Ens_transcript     FALSE ## 15 ENSG00000145335 Ens_gene ENST00000506691 Ens_transcript     FALSE ## 16 ENSG00000145335 Ens_gene ENST00000673902 Ens_transcript     FALSE ## 17 ENSG00000145335 Ens_gene ENST00000394991 Ens_transcript      TRUE getDirectProduct(\"ENST00000336904\", process=\"is_translated_in\") ##            origin        osource         product         psource canonical ## 1 ENST00000336904 Ens_transcript ENSP00000338345 Ens_translation      TRUE getDirectOrigin(\"NM_001146055\", process=\"is_expressed_as\") ##   origin    osource      product psource canonical ## 1   6622 EntrezGene NM_001146055  RefSeq     FALSE"},{"path":[]},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"same-entity-and-same-organism-from-one-source-to-another","dir":"Articles","previous_headings":"Converting identifiers","what":"Same entity and same organism: from one source to another","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"","code":"res <- convBeIds(     ids=oriId,     from=\"Gene\",     from.source=\"EntrezGene\",     from.org=\"mouse\",     to.source=\"Ens_gene\",     restricted=TRUE,     prefFilter=TRUE ) head(res) ##        from                 to to.preferred to.entity ## 1     19062 ENSMUSG00000006127         TRUE   2790077 ## 2     13347 ENSMUSG00000028974         TRUE   2791260 ## 3    103742 ENSMUSG00000002580         TRUE   2792328 ## 4    320145 ENSMUSG00000048562         TRUE   2795236 ## 5 105886298 ENSMUSG00000090110         TRUE   2797892 ## 6    320727 ENSMUSG00000040029         TRUE   2799905"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"same-organism-from-one-entity-to-another","dir":"Articles","previous_headings":"Converting identifiers","what":"Same organism: from one entity to another","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"","code":"res <- convBeIds(     ids=oriId,     from=\"Gene\",     from.source=\"EntrezGene\",     from.org=\"mouse\",     to=\"Peptide\",     to.source=\"Ens_translation\",     restricted=TRUE,     prefFilter=TRUE ) head(res) ##         from                 to to.preferred to.entity ## 1      19062 ENSMUSP00000119996         TRUE   3761978 ## 2      19062 ENSMUSP00000121060         TRUE   3761986 ## 3     320145 ENSMUSP00000152523         TRUE   3767751 ## 4  105886298 ENSMUSP00000033543         TRUE   3770795 ## 10 105886298 ENSMUSP00000112753         TRUE   3770795 ## 7  105886298 ENSMUSP00000117381         TRUE   3770795"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"from-one-organism-to-another","dir":"Articles","previous_headings":"Converting identifiers","what":"From one organism to another","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"","code":"res <- convBeIds(     ids=oriId,     from=\"Gene\",     from.source=\"EntrezGene\",     from.org=\"mouse\",     to=\"Peptide\",     to.source=\"Ens_translation\",     to.org=\"human\",     restricted=TRUE,     prefFilter=TRUE ) head(res) ##      from              to to.preferred to.entity ## 34  17237 ENSP00000468171         TRUE   2385263 ## 35  17237 ENSP00000443810         TRUE   2385494 ## 36  17237 ENSP00000467414         TRUE   2385496 ## 37  17237 ENSP00000464811         TRUE   2385515 ## 38  17237 ENSP00000465249         TRUE   2385516 ## 19 103742 ENSP00000377778         TRUE   2393233"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"converting-lists-of-identifiers","dir":"Articles","previous_headings":"Converting identifiers","what":"Converting lists of identifiers","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"List identifiers can converted following way. converted IDs returned case.","code":"humanEnsPeptides <- convBeIdLists(     idList=list(a=oriId[1:5], b=oriId[-c(1:5)]),     from=\"Gene\",     from.source=\"EntrezGene\",     from.org=\"mouse\",     to=\"Peptide\",     to.source=\"Ens_translation\",     to.org=\"human\",     restricted=TRUE,     prefFilter=TRUE ) unlist(lapply(humanEnsPeptides, length)) ##   a   b  ##  21 117 lapply(humanEnsPeptides, head) ## $a ## [1] \"ENSP00000468171\" \"ENSP00000443810\" \"ENSP00000467414\" \"ENSP00000464811\" ## [5] \"ENSP00000465249\" \"ENSP00000497944\" ##  ## $b ## [1] \"ENSP00000377778\" \"ENSP00000462998\" \"ENSP00000466569\" \"ENSP00000466749\" ## [5] \"ENSP00000465876\" \"ENSP00000465690\""},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"beidlist","dir":"Articles","previous_headings":"Converting identifiers > Converting lists of identifiers","what":"BEIDList","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"BEIDList objects used manage lists BEID attached explicit scope, metadata provided data frame. focusOnScope() function used easily convert object another scope. example, code , Entrez gene identifiers converted Ensembl identifiers.","code":"entrezGenes <- BEIDList(    list(a=oriId[1:5], b=oriId[-c(1:5)]),    scope=list(be=\"Gene\", source=\"EntrezGene\", organism=\"Mus musculus\"),    metadata=data.frame(       .lname=c(\"a\", \"b\"),       description=c(\"Identifiers in a\", \"Identifiers in b\"),       stringsAsFactors=FALSE    ) ) entrezGenes ## BEIDList of 2 elements gathering 25 BEIDs in total ##    - Scope: be=\"Gene\", source=\"EntrezGene\", organism=\"Mus musculus\" ##    - Metadata fields: \".lname\", \"description\" entrezGenes$a ## [1] \"17237\"     \"105886298\" \"76429\"     \"80985\"     \"230514\" ensemblGenes <- focusOnScope(entrezGenes, source=\"Ens_gene\") ensemblGenes$a ## [1] \"ENSMUSG00000090110\" \"ENSMUSG00000022517\" \"ENSMUSG00000035212\" ## [4] \"ENSMUSG00000030946\" \"ENSMUSG00000027189\""},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"converting-data-frames","dir":"Articles","previous_headings":"Converting identifiers","what":"Converting data frames","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"IDs data frames can also converted.","code":"toConv <- data.frame(a=1:25, b=runif(25)) rownames(toConv) <- oriId res <- convDfBeIds(     df=toConv,     from=\"Gene\",     from.source=\"EntrezGene\",     from.org=\"mouse\",     to.source=\"Ens_gene\",     restricted=TRUE,     prefFilter=TRUE ) head(res) ##   a           b conv.from            conv.to ## 1 1 0.080750138     17237 ENSMUSG00000022517 ## 2 2 0.834333037 105886298 ENSMUSG00000090110 ## 3 3 0.600760886     76429 ENSMUSG00000030946 ## 4 4 0.157208442     80985 ENSMUSG00000027189 ## 5 5 0.007399441    230514 ENSMUSG00000035212 ## 6 6 0.466393497     66459 ENSMUSG00000043162"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"explore-convertion-shortest-path-between-two-identifiers","dir":"Articles","previous_headings":"Converting identifiers","what":"Explore convertion shortest path between two identifiers","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"conversion process takes account several resources, might useful explore path two identifiers mapped. can achieved exploreConvPath function. figure shows ILMN_1220595 ProbeID, targeting mouse NM_010552 transcript, can associated Q16552 human protein ID Uniprot.","code":"from.id <- \"ILMN_1220595\" res <- convBeIds(    ids=from.id, from=\"Probe\", from.source=\"GPL6885\", from.org=\"mouse\",    to=\"Peptide\", to.source=\"Uniprot\", to.org=\"human\",    prefFilter=TRUE ) res ##           from     to to.preferred to.entity ## 1 ILMN_1220595 Q16552         TRUE   8712579 exploreConvPath(    from.id=from.id, from=\"Probe\", from.source=\"GPL6885\",    to.id=res$to[1], to=\"Peptide\", to.source=\"Uniprot\" )"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"notes-about-converting-from-and-to-gene-symbols","dir":"Articles","previous_headings":"Converting identifiers","what":"Notes about converting from and to gene symbols","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"Canonical non-canonical symbols associated genes. cases symbol (canonical ) can associated several genes. can lead ambiguous mapping. strategy apply mapping depends aim user knowledge origin symbols consider. complete mapping Ensembl gene identifiers symbols retrieved using getBeIDSymbolTable function. canonical field indicates symbol canonical identifier. direct field indicates symbol directly associated identifier indirectly relationship another identifier. example, let’s consider “Snca” symbol rat. shown , symbol associated 2 genes; canonical one gene another. 2 genes also associated symbols. getBeIdDescription function described , reports one symbol identifier. Canonical direct symbols prioritized. convBeIds works differently order provide mapping exhaustive possible. symbol associated several input identifiers, non-canonical associations symbol removed canonical association exists identifier. can lead inconsistent results, depending user input, show . example , query run identifier independently, association “Snca” symbol reported . However, running query 2 identifiers time, “Snca” symbol reported one gene corresponding canonical association. additional filter can used keep canonical symbols: Finally, shown , running query way, “Snca” associated gene canonical symbol. Therefore, user chose function use care needing convert gene symbol.","code":"compMap <- getBeIdSymbolTable(    be=\"Gene\", source=\"Ens_gene\", organism=\"rat\",    restricted=FALSE ) dim(compMap) ## [1] 139938      6 head(compMap) ##                   id       symbol canonical direct preferred  entity ## 1 ENSRNOG00000016565    LOC365179     FALSE   TRUE      TRUE 4000180 ## 2 ENSRNOG00000016565   RGD1565485     FALSE   TRUE      TRUE 4000180 ## 3 ENSRNOG00000016565       Znf524     FALSE   TRUE      TRUE 4000180 ## 4 ENSRNOG00000016565       Zfp524      TRUE   TRUE      TRUE 4000180 ## 5 ENSRNOG00000017878       Aldhpb     FALSE   TRUE      TRUE 7830536 ## 6 ENSRNOG00000017878 LOC108349824     FALSE   TRUE      TRUE 7830536 sncaEid <- compMap[which(compMap$symbol==\"Snca\"),] sncaEid ##                       id symbol canonical direct preferred  entity ## 18141 ENSRNOG00000029408   Snca     FALSE   TRUE      TRUE 4021424 ## 67789 ENSRNOG00000008656   Snca      TRUE   TRUE      TRUE 4002847 compMap[which(compMap$id %in% sncaEid$id),] ##                       id    symbol canonical direct preferred  entity ## 18140 ENSRNOG00000029408 LOC317274     FALSE   TRUE      TRUE 4021424 ## 18141 ENSRNOG00000029408      Snca     FALSE   TRUE      TRUE 4021424 ## 18142 ENSRNOG00000029408   Mageb16      TRUE   TRUE      TRUE 4021424 ## 67788 ENSRNOG00000008656 MGC105443     FALSE   TRUE      TRUE 4002847 ## 67789 ENSRNOG00000008656      Snca      TRUE   TRUE      TRUE 4002847 getBeIdDescription(    sncaEid$id,    be=\"Gene\", source=\"Ens_gene\", organism=\"rat\" ) ##                                    id  symbol                   name preferred ## ENSRNOG00000029408 ENSRNOG00000029408 Mageb16 MAGE family member B16      TRUE ## ENSRNOG00000008656 ENSRNOG00000008656    Snca        synuclein alpha      TRUE ##                    db.version db.deprecated ## ENSRNOG00000029408        112         FALSE ## ENSRNOG00000008656        112         FALSE convBeIds(    sncaEid$id[1],    from=\"Gene\", from.source=\"Ens_gene\", from.org=\"rat\",    to.source=\"Symbol\" ) ##                 from        to to.preferred to.entity ## 3 ENSRNOG00000029408 LOC317274           NA   4021424 ## 2 ENSRNOG00000029408   Mageb16           NA   4021424 ## 1 ENSRNOG00000029408      Snca           NA   4021424 convBeIds(    sncaEid$id[2],    from=\"Gene\", from.source=\"Ens_gene\", from.org=\"rat\",    to.source=\"Symbol\" ) ##                 from        to to.preferred to.entity ## 2 ENSRNOG00000008656 MGC105443           NA   4002847 ## 1 ENSRNOG00000008656      Snca           NA   4002847 convBeIds(    sncaEid$id,    from=\"Gene\", from.source=\"Ens_gene\", from.org=\"rat\",    to.source=\"Symbol\" ) ##                 from        to to.preferred to.entity ## 2 ENSRNOG00000008656 MGC105443           NA   4002847 ## 1 ENSRNOG00000008656      Snca           NA   4002847 ## 5 ENSRNOG00000029408 LOC317274           NA   4021424 ## 4 ENSRNOG00000029408   Mageb16           NA   4021424 convBeIds(    sncaEid$id,    from=\"Gene\", from.source=\"Ens_gene\", from.org=\"rat\",    to.source=\"Symbol\",    canonical=TRUE ) ##                 from      to to.preferred to.entity ## 1 ENSRNOG00000008656    Snca           NA   4002847 ## 2 ENSRNOG00000029408 Mageb16           NA   4021424 convBeIds(    \"Snca\",    from=\"Gene\", from.source=\"Symbol\", from.org=\"rat\",    to.source=\"Ens_gene\" ) ##   from                 to to.preferred to.entity ## 1 Snca ENSRNOG00000008656         TRUE   4002847"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"an-interactive-dictionary-shiny-module","dir":"Articles","previous_headings":"","what":"An interactive dictionary: Shiny module","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"IDs, symbols names can seeked without knowing original biological entity probe. results can converted context interest. Shiny gadget integrating two function developped also available Rstudio addins. relies Shiny module (beidsServer() beidsUI() functions) made facilitate development applications focused biological entity related information. code shows minimum example application.","code":"searched <- searchBeid(\"sv2A\") toTake <- which(searched$organism==\"Homo sapiens\")[1] relIds <- geneIDsToAllScopes(   geneids=searched$GeneID[toTake],   source=searched$Gene_source[toTake],   organism=searched$organism[toTake] ) relIds <- findBeids() library(shiny) library(BED) library(DT)  ui <- fluidPage(    beidsUI(\"be\"),    fluidRow(       column(          12,          tags$br(),          h3(\"Selected gene entities\"),          DTOutput(\"result\")       )    ) )  server <- function(input, output){     found <- beidsServer(\"be\", toGene=TRUE, multiple=TRUE, tableHeight=250)     output$result <- renderDT({        req(found())        toRet <- found()        datatable(toRet, rownames=FALSE)     }) }  shinyApp(ui = ui, server = server)"},{"path":"https://patzaw.github.io/BED/articles/BED.html","id":"session-info","dir":"Articles","previous_headings":"","what":"Session info","title":"Biological Entity Dictionary (BED): exploring and converting identifiers of biological entities such as genes, transcripts or peptides","text":"","code":"## R version 4.3.0 (2023-04-21) ## Platform: x86_64-pc-linux-gnu (64-bit) ## Running under: Red Hat Enterprise Linux ##  ## Matrix products: default ## BLAS/LAPACK: /usr/lib64/libopenblasp-r0.3.3.so;  LAPACK version 3.8.0 ##  ## locale: ##  [1] LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C               ##  [3] LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8     ##  [5] LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8    ##  [7] LC_PAPER=en_GB.UTF-8       LC_NAME=C                  ##  [9] LC_ADDRESS=C               LC_TELEPHONE=C             ## [11] LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C        ##  ## time zone: Europe/Brussels ## tzcode source: system (glibc) ##  ## attached base packages: ## [1] stats     graphics  grDevices utils     datasets  methods   base      ##  ## other attached packages: ## [1] BED_1.5.2        visNetwork_2.1.2 neo2R_2.4.2      knitr_1.46       ##  ## loaded via a namespace (and not attached): ##  [1] sass_0.4.9        utf8_1.2.4        generics_0.1.3    stringi_1.8.4     ##  [5] digest_0.6.35     magrittr_2.0.3    evaluate_0.23     fastmap_1.2.0     ##  [9] jsonlite_1.8.8    promises_1.3.0    httr_1.4.7        purrr_1.0.2       ## [13] fansi_1.0.6       textshaping_0.3.7 jquerylib_0.1.4   cli_3.6.2         ## [17] shiny_1.8.1.1     rlang_1.1.3       withr_3.0.0       base64enc_0.1-3   ## [21] cachem_1.1.0      yaml_2.3.8        tools_4.3.0       memoise_2.0.1     ## [25] dplyr_1.1.4       httpuv_1.6.15     DT_0.33           curl_5.2.1        ## [29] vctrs_0.6.5       R6_2.5.1          mime_0.12         lifecycle_1.0.4   ## [33] stringr_1.5.1     fs_1.6.4          htmlwidgets_1.6.4 miniUI_0.1.1.1    ## [37] ragg_1.3.2        pkgconfig_2.0.3   desc_1.4.3        pkgdown_2.0.9     ## [41] pillar_1.9.0      bslib_0.7.0       later_1.3.2       glue_1.7.0        ## [45] Rcpp_1.0.12       systemfonts_1.1.0 xfun_0.44         tibble_3.2.1      ## [49] tidyselect_1.2.1  rstudioapi_0.16.0 xtable_1.8-4      htmltools_0.5.8.1 ## [53] rmarkdown_2.26    compiler_4.3.0"},{"path":"https://patzaw.github.io/BED/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Patrice Godard. Author, maintainer, copyright holder.","code":""},{"path":"https://patzaw.github.io/BED/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Patrice Godard Jonathan van Eyll (2018). BED: Biological Entity Dictionary based graph data model [version 3; peer review: 2 approved]. F1000Research, 7:195.","code":"@Article{,   title = {BED: a Biological Entity Dictionary based on a graph data model},   author = {{Patrice Godard} and {Jonathan van Eyll}},   journal = {F1000Research},   year = {2018},   volume = {7},   pages = {195},   doi = {10.12688/f1000research.13925.3},   url = {https://doi.org/10.12688/f1000research.13925.3}, }"},{"path":[]},{"path":"https://patzaw.github.io/BED/index.html","id":"biological-entity-dictionary-","dir":"","previous_headings":"","what":"Biological Entity Dictionary","title":"Biological Entity Dictionary (BED)","text":"interface ‘Neo4j’ database providing mapping different identifiers biological entities. Biological Entity Dictionary (BED) developed address three main challenges. first one related completeness identifier mappings. Indeed, direct mapping information provided different systems always complete can enriched mappings provided resources. interestingly, direct mappings identified resources can indirectly inferred using mappings third reference. example, many human Ensembl gene ID directly mapped Entrez gene ID mappings can inferred using respective mappings HGNC ID. second challenge related mapping deprecated identifiers. Indeed, entity identifiers can change one resource release another. identifier history provided resources, Ensembl NCBI, generally used mapping tools. third challenge related automation mapping process according relationships biological entities interest. Indeed, mapping gene protein ID scopes done way two scopes regarding gene ID. Also, converting identifiers different organisms possible using gene orthologs information. method published Godard van Eyll (2018) doi:10.12688/f1000research.13925.3.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/index.html","id":"from-cran","dir":"","previous_headings":"Installation","what":"From CRAN","title":"Biological Entity Dictionary (BED)","text":"","code":"install.packages(\"BED\")"},{"path":"https://patzaw.github.io/BED/index.html","id":"dependencies","dir":"","previous_headings":"Installation","what":"Dependencies","title":"Biological Entity Dictionary (BED)","text":"following R packages available CRAN required: neo2R: Neo4j R visNetwork: Network Visualization using ‘vis.js’ Library dplyr: Grammar Data Manipulation readr: Read Rectangular Text Data stringr: Simple, Consistent Wrappers Common String Operations utils: R Utils Package shiny: Web Application Framework R DT: Wrapper JavaScript Library ‘DataTables’ miniUI: Shiny UI Widgets Small Screens rstudioapi: Safely Access RStudio API suggested: knitr: General-Purpose Package Dynamic Report Generation R rmarkdown: Dynamic Documents R biomaRt: Interface BioMart databases (.e. Ensembl) GEOquery: Get data NCBI Gene Expression Omnibus (GEO) base64enc: Tools base64 encoding htmltools: Tools HTML webshot2: Take Screenshots Web Pages RCurl: General Network (HTTP/FTP/…) Client Interface R","code":""},{"path":"https://patzaw.github.io/BED/index.html","id":"installation-from-github","dir":"","previous_headings":"Installation","what":"Installation from github","title":"Biological Entity Dictionary (BED)","text":"","code":"devtools::install_github(\"patzaw/BED\")"},{"path":"https://patzaw.github.io/BED/index.html","id":"possible-issue-when-updating-from-releases--130","dir":"","previous_headings":"Installation","what":"Possible issue when updating from releases <= 1.3.0","title":"Biological Entity Dictionary (BED)","text":"get error like following… … remove BED folder located :","code":"Error: package or namespace load failed for ‘BED’:  .onLoad failed in loadNamespace() for 'BED', details:   call: connections[[connection]][[\"cache\"]]   error: subscript out of bounds file.exists(file.path(Sys.getenv(\"HOME\"), \"R\", \"BED\"))"},{"path":"https://patzaw.github.io/BED/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Biological Entity Dictionary (BED)","text":"Documentation provided BED vignette. public instance BED Neo4j database provided convenience can reached follows:","code":"library(BED) connectToBed(\"https://genodesy.org/BED/\", remember=TRUE, useCache=TRUE) findBeids()"},{"path":"https://patzaw.github.io/BED/index.html","id":"citing-bed","dir":"","previous_headings":"","what":"Citing BED","title":"Biological Entity Dictionary (BED)","text":"package underlying research published peer reviewed article: Patrice Godard Jonathan van Eyll (2018). BED: Biological Entity Dictionary based graph data model (version 3; peer review: 2 approved). F1000Research, 7:195.","code":""},{"path":"https://patzaw.github.io/BED/index.html","id":"available-bed-database-instance","dir":"","previous_headings":"","what":"Available BED database instance","title":"Biological Entity Dictionary (BED)","text":"instance BED database (UCB-Human) built using script provided BED R package. instance focused Homo sapiens, Mus musculus, Rattus norvegicus, Sus scrofa Danio rerio organisms. built following resources: Ensembl NCBI Uniprot biomaRt GEOquery Neo4j graph database available dump file shared Zenodo. following shell commands can adapted according user needs called get running Neo4j container BED database instance.","code":"#!/bin/sh  ####################################################@ ## Check folders ---- if test -e ~/.cache/BED/neo4jData; then    echo \"~/.cache/BED/neo4jData directory exists ==> abort - Remove it before proceeding\" >&2    exit fi mkdir -p ~/.cache/BED/neo4jData  if test -e ~/.cache/BED/neo4jDump; then    echo \"~/.cache/BED/neo4jDump directory exists ==> abort - Remove it before proceeding\" >&2    exit fi mkdir -p ~/.cache/BED/neo4jDump  ####################################################@ ## Download data ---- export BED_REP_URL=https://zenodo.org/records/11196534/files/ wget $BED_REP_URL/dump_bed_Genodesy-Human_2024.05.15.dump -O ~/.cache/BED/neo4jDump/neo4j.dump  ####################################################@ ## Import data ---- docker run --interactive --tty --rm \\    --volume=~/.cache/BED/neo4jData/data:/data \\    --volume=~/.cache/BED/neo4jDump:/backups \\     neo4j:5.19.0 \\ neo4j-admin database load neo4j --from-path=/backups  ####################################################@ ## Start neo4j ---- docker run -d \\    --name bed_2024.05.15 \\    --publish=5454:7474 \\    --publish=5687:7687 \\    --env=NEO4J_dbms_memory_heap_initial__size=4G \\    --env=NEO4J_dbms_memory_heap_max__size=4G \\    --env=NEO4J_dbms_memory_pagecache_size=4G \\    --env=NEO4J_dbms_read__only=true \\    --env=NEO4J_AUTH=none \\    --volume ~/.cache/BED/neo4jData/data:/data \\    --volume ~/.cache/BED/neo4jData/logs:/var/lib/neo4j/logs \\    --restart=always \\    neo4j:5.19.0"},{"path":"https://patzaw.github.io/BED/index.html","id":"build-a-bed-database-instance","dir":"","previous_headings":"","what":"Build a BED database instance","title":"Biological Entity Dictionary (BED)","text":"Building feeding BED database instance achieved using scripts available “supp/Build” folder.","code":""},{"path":"https://patzaw.github.io/BED/index.html","id":"run-a-neo4j-docker-images","dir":"","previous_headings":"Build a BED database instance","what":"Run a neo4j docker images","title":"Biological Entity Dictionary (BED)","text":"Using S01-NewBED-Container.sh script.","code":""},{"path":"https://patzaw.github.io/BED/index.html","id":"build-and-feed-bed","dir":"","previous_headings":"Build a BED database instance","what":"Build and feed BED","title":"Biological Entity Dictionary (BED)","text":"Using S02-Rebuild-BED.sh script compile Rebuild-BED.Rmd document.","code":""},{"path":"https://patzaw.github.io/BED/index.html","id":"dump-the-graph-db-content-for-sharing","dir":"","previous_headings":"","what":"Dump the graph DB content for sharing","title":"Biological Entity Dictionary (BED)","text":"Using S03-Dump-BED.sh script","code":""},{"path":"https://patzaw.github.io/BED/index.html","id":"docker-notes","dir":"","previous_headings":"","what":"Docker notes","title":"Biological Entity Dictionary (BED)","text":"Sergio Espeso-Gil reported stability issues Docker images Windows. ’s mainly solved checking “Use WSL2 based engine” options docker settings. information provided : https://docs.docker.com/docker--windows/wsl/","code":""},{"path":"https://patzaw.github.io/BED/reference/BED.html","id":null,"dir":"Reference","previous_headings":"","what":"Biological Entity Dictionary (BED) — BED","title":"Biological Entity Dictionary (BED) — BED","text":"interface neo4j database providing mapping different identifiers biological entities. Biological Entity Dictionary (BED) developed address three main challenges. first one related completeness identifier mappings. Indeed, direct mapping information provided different systems always complete can enriched mappings provided resources. interestingly, direct mappings identified resources can indirectly inferred using mappings third reference. example, many human Ensembl gene ID directly mapped Entrez gene ID mappings can inferred using respective mappings HGNC ID. second challenge related mapping deprecated identifiers. Indeed, entity identifiers can change one resource release another. identifier history provided resources, Ensembl NCBI, generally used mapping tools. third challenge related automation mapping process according relationships biological entities interest. Indeed, mapping gene protein ID scopes done way two scopes regarding gene ID. Also, converting identifiers different organisms possible using gene orthologs information. Vignette Available database instance: https://github.com/patzaw/BED#bed-database-instance-available---docker-image Building database instance: https://github.com/patzaw/BED#build--bed-database-instance Repository: https://github.com/patzaw/BED Bug reports: https://github.com/patzaw/BED/issues","code":""},{"path":"https://patzaw.github.io/BED/reference/BED.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Biological Entity Dictionary (BED) — BED","text":"Patrice Godard","code":""},{"path":"https://patzaw.github.io/BED/reference/BEIDList.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a BEIDList — BEIDList","title":"Create a BEIDList — BEIDList","text":"Create BEIDList","code":""},{"path":"https://patzaw.github.io/BED/reference/BEIDList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a BEIDList — BEIDList","text":"","code":"BEIDList(l, metadata, scope)"},{"path":"https://patzaw.github.io/BED/reference/BEIDList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a BEIDList — BEIDList","text":"l named list BEID vectors metadata data.frame rownames column \".lname\" names l. missing, metadata constructed .lname names l. scope list 3 character vectors length one named \"\", \"source\" \"organism\". missing, guessed l.","code":""},{"path":"https://patzaw.github.io/BED/reference/BEIDList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a BEIDList — BEIDList","text":"BEIDList object list BEID vectors 2 additional attributes: metadata: data.frame metadata list elements. \".lname\" column correspond names BEIDList. scope: BEID scope (\"\", \"source\" \"organism\")","code":""},{"path":"https://patzaw.github.io/BED/reference/BEIDList.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a BEIDList — BEIDList","text":"","code":"if (FALSE) { bel <- BEIDList(    l=list(       kinases=c(\"117283\", \"3706\", \"3707\", \"51447\", \"80271\", \"9807\"),       phosphatases=c(          \"130367\", \"249\", \"283871\", \"493911\", \"57026\", \"5723\", \"81537\"       )    ),    scope=list(be=\"Gene\", source=\"EntrezGene\", organism=\"Homo sapiens\") ) scope(bel) metadata(bel) metadata(bel) <- dplyr::mutate(    metadata(bel),    \"description\"=c(\"A few kinases\", \"A few phosphatases\") ) metadata(bel) }"},{"path":"https://patzaw.github.io/BED/reference/BEIDs.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the BEIDs from an object — BEIDs","title":"Get the BEIDs from an object — BEIDs","text":"Get BEIDs object","code":""},{"path":"https://patzaw.github.io/BED/reference/BEIDs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the BEIDs from an object — BEIDs","text":"","code":"BEIDs(x, ...)"},{"path":"https://patzaw.github.io/BED/reference/BEIDs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the BEIDs from an object — BEIDs","text":"x object representing collection BEID (e.g. BEIDList) ... method specific parameters","code":""},{"path":"https://patzaw.github.io/BED/reference/BEIDs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the BEIDs from an object — BEIDs","text":"tibble least 4 columns: value source organism ...","code":""},{"path":"https://patzaw.github.io/BED/reference/beIDsToAllScopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all BEID and ProbeID corresponding to a BE — beIDsToAllScopes","title":"Find all BEID and ProbeID corresponding to a BE — beIDsToAllScopes","text":"Find BEID ProbeID corresponding ","code":""},{"path":"https://patzaw.github.io/BED/reference/beIDsToAllScopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all BEID and ProbeID corresponding to a BE — beIDsToAllScopes","text":"","code":"beIDsToAllScopes(   beids,   be,   source,   organism,   entities = NULL,   canonical_symbols = TRUE )"},{"path":"https://patzaw.github.io/BED/reference/beIDsToAllScopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all BEID and ProbeID corresponding to a BE — beIDsToAllScopes","text":"beids character vector gene identifiers one . Guessed provided source source gene identifiers. Guessed provided organism gene organism. Guessed provided entities numeric vector gene entity. NULL (default), beids, source organism arguments used identify BEs. carefull using entities identifiers stable. canonical_symbols return canonical symbols (default: TRUE).","code":""},{"path":"https://patzaw.github.io/BED/reference/beIDsToAllScopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all BEID and ProbeID corresponding to a BE — beIDsToAllScopes","text":"data.frame following fields: value: identifier : type source: source identifier organism: organism symbol: canonical symbol identifier BE_entity: entity input BEID (optional): ID input BE_source (optional): source input","code":""},{"path":"https://patzaw.github.io/BED/reference/bedCall.html","id":null,"dir":"Reference","previous_headings":"","what":"Call a function on the BED graph — bedCall","title":"Call a function on the BED graph — bedCall","text":"Call function BED graph","code":""},{"path":"https://patzaw.github.io/BED/reference/bedCall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Call a function on the BED graph — bedCall","text":"","code":"bedCall(f, ..., bedCheck = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/bedCall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Call a function on the BED graph — bedCall","text":"f function call ... params f bedCheck check connection BED exists (default: FALSE).","code":""},{"path":"https://patzaw.github.io/BED/reference/bedCall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Call a function on the BED graph — bedCall","text":"output called function.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/bedCall.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Call a function on the BED graph — bedCall","text":"","code":"if (FALSE) { result <- bedCall(    cypher,    query=prepCql(       'MATCH (n:BEID)',       'WHERE n.value IN $values',       'RETURN n.value AS value, n.labels, n.database'    ),    parameters=list(values=c(\"10\", \"100\")) ) }"},{"path":"https://patzaw.github.io/BED/reference/bedImport.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Imports a data.frame in the BED graph database — bedImport","title":"Feeding BED: Imports a data.frame in the BED graph database — bedImport","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/bedImport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Imports a data.frame in the BED graph database — bedImport","text":"","code":"bedImport(cql, toImport, periodicCommit = 10000, ...)"},{"path":"https://patzaw.github.io/BED/reference/bedImport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Imports a data.frame in the BED graph database — bedImport","text":"cql CQL query applied row toImport toImport data.frame imported \"row\". Use \"row.FIELD\" cql query refer one FIELD toImport data.frame periodicCommit use periodic commit loading data (default: 1000). ... additional parameters bedCall","code":""},{"path":"https://patzaw.github.io/BED/reference/bedImport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Feeding BED: Imports a data.frame in the BED graph database — bedImport","text":"results query","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/beidsServer.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny module for searching BEIDs — beidsServer","title":"Shiny module for searching BEIDs — beidsServer","text":"Shiny module searching BEIDs","code":""},{"path":"https://patzaw.github.io/BED/reference/beidsServer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny module for searching BEIDs — beidsServer","text":"","code":"beidsServer(   id,   toGene = TRUE,   multiple = FALSE,   beOfInt = NULL,   selectBe = TRUE,   orgOfInt = NULL,   selectOrg = TRUE,   tableHeight = 150 )  beidsUI(id)"},{"path":"https://patzaw.github.io/BED/reference/beidsServer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny module for searching BEIDs — beidsServer","text":"id identifier module instance toGene focus gene entities (default=TRUE): matches converted genes. multiple allow multiple selections (default=FALSE) beOfInt toGene==FALSE, consider (default=NULL ==> ) selectBe toGene==FALSE, display interface selecting orgOfInt organism consider (default=NULL ==> ) selectOrg display interface selecting organisms tableHeight height result table (default: 150)","code":""},{"path":"https://patzaw.github.io/BED/reference/beidsServer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Shiny module for searching BEIDs — beidsServer","text":"reactive data.frame following columns: beid: identifier preferred: preferred identifier scope : type biological entity source: source identifier organism: organism entity:  internal identifier match: matching character string","code":""},{"path":"https://patzaw.github.io/BED/reference/beidsServer.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Shiny module for searching BEIDs — beidsServer","text":"beidsUI():","code":""},{"path":"https://patzaw.github.io/BED/reference/beidsServer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Shiny module for searching BEIDs — beidsServer","text":"","code":"if (FALSE) { library(shiny) library(BED) library(DT)  ui <- fluidPage(    beidsUI(\"be\"),    fluidRow(       column(          12,          tags$br(),          h3(\"Selected gene entities\"),          DTOutput(\"result\")       )    ) )  server <- function(input, output){    found <- beidsServer(\"be\", toGene=TRUE, multiple=TRUE, tableHeight=250)    output$result <- renderDT({       req(found())       toRet <- found()       datatable(toRet, rownames=FALSE)    }) }  shinyApp(ui = ui, server = server) }"},{"path":"https://patzaw.github.io/BED/reference/cacheBedCall.html","id":null,"dir":"Reference","previous_headings":"","what":"Cached neo4j call — cacheBedCall","title":"Cached neo4j call — cacheBedCall","text":"function calls neo4j DB first time query sent puts result cache SQLite database. next time query called, loads results directly cache SQLite database.","code":""},{"path":"https://patzaw.github.io/BED/reference/cacheBedCall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cached neo4j call — cacheBedCall","text":"","code":"cacheBedCall(..., tn, recache = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/cacheBedCall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cached neo4j call — cacheBedCall","text":"... params bedCall tn name cached table recache boolean indicating CQL query run even table already cache","code":""},{"path":"https://patzaw.github.io/BED/reference/cacheBedCall.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cached neo4j call — cacheBedCall","text":"results bedCall.","code":""},{"path":"https://patzaw.github.io/BED/reference/cacheBedCall.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Cached neo4j call — cacheBedCall","text":"Use \"row\" result returned DB request. Internal use.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/cacheBedResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Put a BED query result in cache — cacheBedResult","title":"Put a BED query result in cache — cacheBedResult","text":"Internal use","code":""},{"path":"https://patzaw.github.io/BED/reference/cacheBedResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put a BED query result in cache — cacheBedResult","text":"","code":"cacheBedResult(value, name)"},{"path":"https://patzaw.github.io/BED/reference/cacheBedResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put a BED query result in cache — cacheBedResult","text":"value result cache name name query","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/checkBeIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Check biological entities (BE) identifiers — checkBeIds","title":"Check biological entities (BE) identifiers — checkBeIds","text":"function takes vector identifiers verify can found provided source database according type organism interest. ID DB linked directly indirectly entity considered found.","code":""},{"path":"https://patzaw.github.io/BED/reference/checkBeIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check biological entities (BE) identifiers — checkBeIds","text":"","code":"checkBeIds(ids, be, source, organism, stopThr = 1, caseSensitive = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/checkBeIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check biological entities (BE) identifiers — checkBeIds","text":"ids vector identifiers checked biological entity. See getBeIds. Guessed provided source source ids. See getBeIds. Guessed provided organism organism interest. See getBeIds. Guessed provided stopThr proportion non-recognized IDs error thrown. Default: 1 ==> check caseSensitive FALSE (default) case taken account checking ids.","code":""},{"path":"https://patzaw.github.io/BED/reference/checkBeIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check biological entities (BE) identifiers — checkBeIds","text":"invisible(TRUE). Stop many (see stopThr parameter) ids found. Warning id found.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/checkBeIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check biological entities (BE) identifiers — checkBeIds","text":"","code":"if (FALSE) { checkBeIds(    ids=c(\"10\", \"100\"), be=\"Gene\", source=\"EntrezGene\", organism=\"human\" ) checkBeIds(    ids=c(\"10\", \"100\"), be=\"Gene\", source=\"Ens_gene\", organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/checkBedCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Check BED cache — checkBedCache","title":"Check BED cache — checkBedCache","text":"function checks information recorded BED cache resets relevant.","code":""},{"path":"https://patzaw.github.io/BED/reference/checkBedCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check BED cache — checkBedCache","text":"","code":"checkBedCache(newCon = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/checkBedCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check BED cache — checkBedCache","text":"newCon TRUE loading system information file","code":""},{"path":"https://patzaw.github.io/BED/reference/checkBedCache.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check BED cache — checkBedCache","text":"Internal use.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/checkBedConn.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if there is a connection to a BED database — checkBedConn","title":"Check if there is a connection to a BED database — checkBedConn","text":"Check connection BED database","code":""},{"path":"https://patzaw.github.io/BED/reference/checkBedConn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if there is a connection to a BED database — checkBedConn","text":"","code":"checkBedConn(verbose = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/checkBedConn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if there is a connection to a BED database — checkBedConn","text":"verbose TRUE print information BED connection (default: FALSE).","code":""},{"path":"https://patzaw.github.io/BED/reference/checkBedConn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if there is a connection to a BED database — checkBedConn","text":"TRUE connection can established FALSE connection established \"System\" node exist \"BED\" name version recorded.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/cleanDubiousXRef.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify and remove dubious cross-references — cleanDubiousXRef","title":"Identify and remove dubious cross-references — cleanDubiousXRef","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/cleanDubiousXRef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify and remove dubious cross-references — cleanDubiousXRef","text":"","code":"cleanDubiousXRef(d, strict = TRUE)"},{"path":"https://patzaw.github.io/BED/reference/cleanDubiousXRef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify and remove dubious cross-references — cleanDubiousXRef","text":"d cross-reference data.frame 2 columns. strict TRUE (default), function returns unambiguous mappings","code":""},{"path":"https://patzaw.github.io/BED/reference/cleanDubiousXRef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify and remove dubious cross-references — cleanDubiousXRef","text":"function returns d without dubious cross-references. Issues reported attr(d, \"issues\").","code":""},{"path":"https://patzaw.github.io/BED/reference/clearBedCache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear the BED cache SQLite database — clearBedCache","title":"Clear the BED cache SQLite database — clearBedCache","text":"Clear BED cache SQLite database","code":""},{"path":"https://patzaw.github.io/BED/reference/clearBedCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear the BED cache SQLite database — clearBedCache","text":"","code":"clearBedCache(queries = NULL, force = FALSE, hard = FALSE, verbose = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/clearBedCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear the BED cache SQLite database — clearBedCache","text":"queries character vector names queries remove. NULL queries removed. force TRUE clear BED cache table even cache file found hard TRUE remove everything cache without checking file names verbose display information process","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/compareBedInstances.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare 2 BED database instances — compareBedInstances","title":"Compare 2 BED database instances — compareBedInstances","text":"Compare 2 BED database instances","code":""},{"path":"https://patzaw.github.io/BED/reference/compareBedInstances.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare 2 BED database instances — compareBedInstances","text":"","code":"compareBedInstances(connections)"},{"path":"https://patzaw.github.io/BED/reference/compareBedInstances.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare 2 BED database instances — compareBedInstances","text":"connections numeric vector length 1 2 providing connections lsBedConnections compared.","code":""},{"path":"https://patzaw.github.io/BED/reference/compareBedInstances.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare 2 BED database instances — compareBedInstances","text":"one connection provided, function returns list information BEID platforms available connection along DB version information. two connections provided information provided 2 connection named V1 V2 order. addition, differences observed 2 instances reported BEID platforms.","code":""},{"path":"https://patzaw.github.io/BED/reference/compareBedInstances.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compare 2 BED database instances — compareBedInstances","text":"current connection restored exiting function.","code":""},{"path":"https://patzaw.github.io/BED/reference/connectToBed.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to a neo4j BED database — connectToBed","title":"Connect to a neo4j BED database — connectToBed","text":"Connect neo4j BED database","code":""},{"path":"https://patzaw.github.io/BED/reference/connectToBed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to a neo4j BED database — connectToBed","text":"","code":"connectToBed(   url = NULL,   username = NULL,   password = NULL,   connection = 1,   remember = FALSE,   useCache = NA,   importPath = NULL,   .opts = list() )"},{"path":"https://patzaw.github.io/BED/reference/connectToBed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to a neo4j BED database — connectToBed","text":"url character string. host port sufficient (e.g: \"localhost:5454\") username character string password character string connection id connection already registered use. default first registered connection used. remember TRUE connection information saved localy file used automatically connect next time. default set FALSE. connections saved can listed lsBedConnections can forgotten forgetBedConnection. useCache TRUE results large queries can saved locally file. default FALSE policy reasons. recommended set TRUE improve speed recurrent queries. NA (default parameter) value taken former connection exists set FALSE. importPath path import folder loading information BED (used feeding database ==> default: NULL) .opts named list identifying curl options handle (see neo2R::startGraph()).","code":""},{"path":"https://patzaw.github.io/BED/reference/connectToBed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to a neo4j BED database — connectToBed","text":"function return value. prepares BED environment allow transparent DB calls.","code":""},{"path":"https://patzaw.github.io/BED/reference/connectToBed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Connect to a neo4j BED database — connectToBed","text":"careful reconnect BED database time environment reloaded. done automatically remember set TRUE. Information get instance BED 'Neo4j' database provided : https://github.com/patzaw/BED#bed-database-instance-available---docker-image https://github.com/patzaw/BED#build--bed-database-instance","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/convBeIdLists.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts lists of BE IDs — convBeIdLists","title":"Converts lists of BE IDs — convBeIdLists","text":"Converts lists IDs","code":""},{"path":"https://patzaw.github.io/BED/reference/convBeIdLists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts lists of BE IDs — convBeIdLists","text":"","code":"convBeIdLists(idList, entity = FALSE, ...)"},{"path":"https://patzaw.github.io/BED/reference/convBeIdLists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts lists of BE IDs — convBeIdLists","text":"idList list IDs lists entity TRUE returns instead BEID (default: FALSE). CAREFUL, INTERNAL ID STABLE USED REFERENCE. internal identifier useful avoid biases related identifier redundancy. See <../doc/BED.html#3_managing_identifiers> ... params convBeIds function","code":""},{"path":"https://patzaw.github.io/BED/reference/convBeIdLists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts lists of BE IDs — convBeIdLists","text":"list convBeIds ouput ids. Scope (\"\", \"source\" \"organism\" \"entity\" (see Arguments)) provided named list \"scope\" attributes: attr(x, \"scope\")","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/convBeIdLists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts lists of BE IDs — convBeIdLists","text":"","code":"if (FALSE) { convBeIdLists(    idList=list(a=c(\"10\", \"100\"), b=c(\"1000\")),    from=\"Gene\",    from.source=\"EntrezGene\",    from.org=\"human\",    to.source=\"Ens_gene\" ) }"},{"path":"https://patzaw.github.io/BED/reference/convBeIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Converts BE IDs — convBeIds","title":"Converts BE IDs — convBeIds","text":"Converts IDs","code":""},{"path":"https://patzaw.github.io/BED/reference/convBeIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Converts BE IDs — convBeIds","text":"","code":"convBeIds(   ids,   from,   from.source,   from.org,   to,   to.source,   to.org,   caseSensitive = FALSE,   canonical = FALSE,   prefFilter = FALSE,   restricted = TRUE,   recache = FALSE,   limForCache = 2000 )"},{"path":"https://patzaw.github.io/BED/reference/convBeIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Converts BE IDs — convBeIds","text":"ids list identifiers character corresponding biological entity Probe. Guessed provided .source character corresponding ID source. Guessed provided .org character corresponding organism. Guessed provided character corresponding biological entity Probe .source character corresponding ID source .org character corresponding organism caseSensitive TRUE case provided symbols taken account search. option affect conversion \"Symbol\" (default: caseSensitive=FALSE). conversion case sensitive. canonical TRUE, returns canonical \"Symbol\". (default: FALSE) prefFilter boolean indicating results filter keep preferred BEID exist (default: FALSE). several preferred BEID , kept. preferred BEID , non-preferred BEID kept. restricted boolean indicating results restricted current version BEID db. FALSE former BEID also returned: Depending history can take long time return large result! recache logical value indicating results taken cache recomputed limForCache ids limForCache. Results collected IDs (beyond provided ids) cached futur queries. , results collected provided ids cached.","code":""},{"path":"https://patzaw.github.io/BED/reference/convBeIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Converts BE IDs — convBeIds","text":"data.frame following columns: : input IDs : corresponding IDs .source .preferred: boolean indicating ID preferred ID corresponding entity. .entity: entity technical ID IDs data.frame can filtered order remove duplicated /.entity associations can lead information bias. Scope (\"\", \"source\" \"organism\") provided named list \"scope\" attributes: attr(x, \"scope\")","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/convBeIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Converts BE IDs — convBeIds","text":"","code":"if (FALSE) { oriId <- c(\"10\", \"100\") convBeIds(    ids=oriId,    from=\"Gene\",    from.source=\"EntrezGene\",    from.org=\"human\",    to.source=\"Ens_gene\" ) convBeIds(    ids=oriId,    from=\"Gene\",    from.source=\"EntrezGene\",    from.org=\"human\",    to=\"Peptide\",    to.source=\"Ens_translation\" ) convBeIds(    ids=oriId,    from=\"Gene\",    from.source=\"EntrezGene\",    from.org=\"human\",    to=\"Peptide\",    to.source=\"Ens_translation\",    to.org=\"mouse\" ) }"},{"path":"https://patzaw.github.io/BED/reference/convDfBeIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Add BE ID conversion to a data frame — convDfBeIds","title":"Add BE ID conversion to a data frame — convDfBeIds","text":"Add ID conversion data frame","code":""},{"path":"https://patzaw.github.io/BED/reference/convDfBeIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add BE ID conversion to a data frame — convDfBeIds","text":"","code":"convDfBeIds(df, idCol = NULL, entity = FALSE, ...)"},{"path":"https://patzaw.github.io/BED/reference/convDfBeIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add BE ID conversion to a data frame — convDfBeIds","text":"df data.frame converted idCol column ID convert . NULL (default) row names taken. entity TRUE returns instead BEID (default: FALSE). CAREFUL, INTERNAL ID STABLE USED REFERENCE. internal identifier useful avoid biases related identifier redundancy. See ../doc/BED.html#3_managing_identifiers ... params convBeIds function","code":""},{"path":"https://patzaw.github.io/BED/reference/convDfBeIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add BE ID conversion to a data frame — convDfBeIds","text":"data.frame converted IDs. Scope (\"\", \"source\", \"organism\" \"entity\" (see Arguments)) provided named list \"scope\" attributes: attr(x, \"scope\").","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/convDfBeIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add BE ID conversion to a data frame — convDfBeIds","text":"","code":"if (FALSE) { toConv <- data.frame(a=1:2, b=3:4) rownames(toConv) <- c(\"10\", \"100\") convDfBeIds(    df=toConv,    from=\"Gene\",    from.source=\"EntrezGene\",    from.org=\"human\",    to.source=\"Ens_gene\" ) }"},{"path":"https://patzaw.github.io/BED/reference/dumpEnsCore.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Dump table from the Ensembl core database — dumpEnsCore","title":"Feeding BED: Dump table from the Ensembl core database — dumpEnsCore","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/dumpEnsCore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Dump table from the Ensembl core database — dumpEnsCore","text":"","code":"dumpEnsCore(   organism,   release,   gv,   ddir,   toDump = c(\"attrib_type\", \"gene_attrib\", \"transcript\", \"external_db\", \"gene\",     \"translation\", \"external_synonym\", \"object_xref\", \"xref\", \"stable_id_event\"),   env = parent.frame(n = 1) )"},{"path":"https://patzaw.github.io/BED/reference/dumpEnsCore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Dump table from the Ensembl core database — dumpEnsCore","text":"organism organism download (e.g. \"Homo sapiens\"). release Ensembl release (e.g. \"83\") gv version genome (e.g. \"38\") ddir path directory data saved toDump list tables download env R environment load tables downloaded","code":""},{"path":"https://patzaw.github.io/BED/reference/dumpNcbiDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Dump tables from the NCBI gene DATA — dumpNcbiDb","title":"Feeding BED: Dump tables from the NCBI gene DATA — dumpNcbiDb","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/dumpNcbiDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Dump tables from the NCBI gene DATA — dumpNcbiDb","text":"","code":"dumpNcbiDb(   taxOfInt,   reDumpThr,   ddir,   toLoad = c(\"gene_info\", \"gene2ensembl\", \"gene_group\", \"gene_orthologs\", \"gene_history\",     \"gene2refseq\"),   env = parent.frame(n = 1),   curDate )"},{"path":"https://patzaw.github.io/BED/reference/dumpNcbiDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Dump tables from the NCBI gene DATA — dumpNcbiDb","text":"taxOfInt organism download (e.g. \"9606\"). reDumpThr time difference threshold 2 downloads ddir path directory data saved toLoad list tables load env R environment load tables downloaded curDate current date given Sys.Date","code":""},{"path":"https://patzaw.github.io/BED/reference/dumpNcbiTax.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Dump tables with taxonomic information from NCBI — dumpNcbiTax","title":"Feeding BED: Dump tables with taxonomic information from NCBI — dumpNcbiTax","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/dumpNcbiTax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Dump tables with taxonomic information from NCBI — dumpNcbiTax","text":"","code":"dumpNcbiTax(   reDumpThr,   ddir,   toDump = c(\"names.dmp\"),   env = parent.frame(n = 1),   curDate )"},{"path":"https://patzaw.github.io/BED/reference/dumpNcbiTax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Dump tables with taxonomic information from NCBI — dumpNcbiTax","text":"reDumpThr time difference threshold 2 downloads ddir path directory data saved toDump list tables load env R environment load tables downloaded curDate current date given Sys.Date","code":""},{"path":"https://patzaw.github.io/BED/reference/dumpUniprotDb.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Dump and preprocess flat data files from Uniprot — dumpUniprotDb","title":"Feeding BED: Dump and preprocess flat data files from Uniprot — dumpUniprotDb","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/dumpUniprotDb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Dump and preprocess flat data files from Uniprot — dumpUniprotDb","text":"","code":"dumpUniprotDb(   taxOfInt,   divOfInt,   release,   ddir,   ftp = \"ftp://ftp.expasy.org/databases/uniprot\",   env = parent.frame(n = 1) )"},{"path":"https://patzaw.github.io/BED/reference/dumpUniprotDb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Dump and preprocess flat data files from Uniprot — dumpUniprotDb","text":"taxOfInt organism interest (e.g., \"9606\" human, \"10090\" mouse \"10116\" rat) divOfInt taxonomic division organism belong (e.g., \"human\", \"rodents\", \"mammals\", \"vertebrates\") release release interest (check already downloaded) ddir path directory data saved ftp location ftp site env R environment load tables built","code":""},{"path":"https://patzaw.github.io/BED/reference/exploreBe.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore BE identifiers — exploreBe","title":"Explore BE identifiers — exploreBe","text":"function uses visNetwork draw identifiers corresponding one (including ProbeID BESymbol)","code":""},{"path":"https://patzaw.github.io/BED/reference/exploreBe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore BE identifiers — exploreBe","text":"","code":"exploreBe(id, source, be, showBE = FALSE, showProbes = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/exploreBe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore BE identifiers — exploreBe","text":"id one ID source ID source database. Guessed provided type . Guessed provided showBE boolean. TRUE Biological Entity corresponding id shown. id isolated (mapped ID symbol) shown anyway. showProbes boolean. TRUE, probes targeting BEID shown.","code":""},{"path":"https://patzaw.github.io/BED/reference/exploreBe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore BE identifiers — exploreBe","text":"","code":"if (FALSE) { exploreBe(\"Gene\", \"100\", \"EntrezGene\") }"},{"path":"https://patzaw.github.io/BED/reference/exploreConvPath.html","id":null,"dir":"Reference","previous_headings":"","what":"Explore the shortest convertion path between two identifiers — exploreConvPath","title":"Explore the shortest convertion path between two identifiers — exploreConvPath","text":"function uses visNetwork draw shortest convertion paths two identifiers (including ProbeID).","code":""},{"path":"https://patzaw.github.io/BED/reference/exploreConvPath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Explore the shortest convertion path between two identifiers — exploreConvPath","text":"","code":"exploreConvPath(   from.id,   to.id,   from,   from.source,   to,   to.source,   edgeDirection = FALSE,   verbose = FALSE )"},{"path":"https://patzaw.github.io/BED/reference/exploreConvPath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Explore the shortest convertion path between two identifiers — exploreConvPath","text":".id first identifier .id second identifier type entity: listBe() Probe. Guessed provided .source identifier source: database platform. Guessed provided type entity: listBe() Probe. Guessed provided .source identifier source: database platform. Guessed provided edgeDirection logical value indicating direction edges drawn. verbose TRUE cypher query shown","code":""},{"path":"https://patzaw.github.io/BED/reference/exploreConvPath.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Explore the shortest convertion path between two identifiers — exploreConvPath","text":"","code":"if (FALSE) { exploreConvPath(    from.id=\"ENST00000413465\",    from=\"Transcript\", from.source=\"Ens_transcript\",    to.id=\"ENSMUST00000108658\",    to=\"Transcript\", to.source=\"Ens_transcript\" ) }"},{"path":"https://patzaw.github.io/BED/reference/filterByBEID.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter an object to keep only a set of BEIDs — filterByBEID","title":"Filter an object to keep only a set of BEIDs — filterByBEID","text":"Filter object keep set BEIDs","code":""},{"path":"https://patzaw.github.io/BED/reference/filterByBEID.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter an object to keep only a set of BEIDs — filterByBEID","text":"","code":"filterByBEID(x, toKeep, ...)"},{"path":"https://patzaw.github.io/BED/reference/filterByBEID.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter an object to keep only a set of BEIDs — filterByBEID","text":"x object representing collection BEID (e.g. BEIDList) toKeep vector elements keep ... method specific parameters","code":""},{"path":"https://patzaw.github.io/BED/reference/findBe.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Biological Entity — findBe","title":"Find Biological Entity — findBe","text":"Find Biological Entity BED based IDs, symbols names","code":""},{"path":"https://patzaw.github.io/BED/reference/findBe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Biological Entity — findBe","text":"","code":"findBe(   be = NULL,   organism = NULL,   ncharSymb = 4,   ncharName = 8,   restricted = TRUE,   by = 20,   exclude = c(\"BEDTech_gene\", \"BEDTech_transcript\") )"},{"path":"https://patzaw.github.io/BED/reference/findBe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Biological Entity — findBe","text":"optional. provided search focused provided BEs. organism optional.  provided search focused provided organisms. ncharSymb minimum number characters searched consider incomplete symbol matches. ncharName minimum number characters searched consider incomplete name matches. restricted boolean indicating results restricted current version BEID db. FALSE former BEID also returned: Depending history can take long time return large result! number found items converted relevant IDs. exclude database exclude possible selection. Used filter technical database names \"BEDTech_gene\" \"BEDTech_transcript\" used manage orphan IDs (linked gene based information taken sources)","code":""},{"path":"https://patzaw.github.io/BED/reference/findBe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Biological Entity — findBe","text":"data frame following fields: found: element found BED corresponding searched term : type element source: source element organism: related organism entity: related entity internal ID ebe: related entity canonical: symbol canonical Relevant ID: seeked element id Symbol: symbol(s) corresponding gene(s) Name: symbol(s) corresponding gene(s) Scope (\"\", \"source\" \"organism\") provided named list \"scope\" attributes: `attr(x, \"scope\")``","code":""},{"path":"https://patzaw.github.io/BED/reference/findBeids.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Biological Entity identifiers — findBeids","title":"Find Biological Entity identifiers — findBeids","text":"Find Biological Entity identifiers","code":""},{"path":"https://patzaw.github.io/BED/reference/findBeids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Biological Entity identifiers — findBeids","text":"","code":"findBeids(toGene = TRUE, ...)"},{"path":"https://patzaw.github.io/BED/reference/findBeids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Biological Entity identifiers — findBeids","text":"toGene focus gene entities (default=TRUE): matches converted genes. ... parameters beidsServer","code":""},{"path":"https://patzaw.github.io/BED/reference/findBeids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Biological Entity identifiers — findBeids","text":"NULL result, data.frame selected values following column: value: identifier preferred: preferred identifier scope : type biological entity source: source identifier organism: organism canonical (toGene==TRUE): canonical gene product? (known) symbol: symbol identifier ()","code":""},{"path":"https://patzaw.github.io/BED/reference/firstCommonUpstreamBe.html","id":null,"dir":"Reference","previous_headings":"","what":"First common upstream BE — firstCommonUpstreamBe","title":"First common upstream BE — firstCommonUpstreamBe","text":"Returns first common Biological Entity () upstream set .","code":""},{"path":"https://patzaw.github.io/BED/reference/firstCommonUpstreamBe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First common upstream BE — firstCommonUpstreamBe","text":"","code":"firstCommonUpstreamBe(beList = listBe(), uniqueOrg = TRUE)"},{"path":"https://patzaw.github.io/BED/reference/firstCommonUpstreamBe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First common upstream BE — firstCommonUpstreamBe","text":"beList character vector containing uniqueOrg logical value indicating single organism focus. false \"Gene\" returned.","code":""},{"path":"https://patzaw.github.io/BED/reference/firstCommonUpstreamBe.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"First common upstream BE — firstCommonUpstreamBe","text":"function used identified level different compared. Peptides transcripts compared level transcripts whereas transcripts objects compared level genes. different organism compared level genes using homologs.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/firstCommonUpstreamBe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"First common upstream BE — firstCommonUpstreamBe","text":"","code":"if (FALSE) { firstCommonUpstreamBe(c(\"Object\", \"Transcript\")) firstCommonUpstreamBe(c(\"Peptide\", \"Transcript\")) firstCommonUpstreamBe(c(\"Peptide\", \"Transcript\"), uniqueOrg=FALSE) }"},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.BEIDList.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert a BEIDList object in a specific identifier (BEID) scope — focusOnScope.BEIDList","title":"Convert a BEIDList object in a specific identifier (BEID) scope — focusOnScope.BEIDList","text":"Convert BEIDList object specific identifier (BEID) scope","code":""},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.BEIDList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert a BEIDList object in a specific identifier (BEID) scope — focusOnScope.BEIDList","text":"","code":"# S3 method for BEIDList focusOnScope(   x,   be = NULL,   source = NULL,   organism = NULL,   scope = NULL,   force = FALSE,   restricted = TRUE,   prefFilter = TRUE,   ... )"},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.BEIDList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert a BEIDList object in a specific identifier (BEID) scope — focusOnScope.BEIDList","text":"x BEIDList converted type biological entity focus . NULL (default), taken scope(x). Used .null(scope) source source BEID focus . NULL (default), taken scope(x). Used .null(scope) organism organism BEID focus . NULL (default), taken scope(x). Used .null(scope) scope list following element: source organism force TRUE conversion done even identical scopes (default: FALSE) restricted TRUE (default) BEID limited current version source prefFilter TRUE (default) BEID limited prefered identifiers exist ... additional parameters BEID conversion function","code":""},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.BEIDList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert a BEIDList object in a specific identifier (BEID) scope — focusOnScope.BEIDList","text":"BEIDList","code":""},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.html","id":null,"dir":"Reference","previous_headings":"","what":"Focus a BE related object on a specific identifier (BEID) scope — focusOnScope","title":"Focus a BE related object on a specific identifier (BEID) scope — focusOnScope","text":"Focus related object specific identifier (BEID) scope","code":""},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Focus a BE related object on a specific identifier (BEID) scope — focusOnScope","text":"","code":"focusOnScope(   x,   be,   source,   organism,   scope,   force,   restricted,   prefFilter,   ... )"},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Focus a BE related object on a specific identifier (BEID) scope — focusOnScope","text":"x object representing collection BEID (e.g. BEIDList) type biological entity focus . Used .null(scope) source source BEID focus . Used .null(scope) organism organism BEID focus . Used .null(scope) scope list following element: source organism force TRUE conversion done even identical scopes (default: FALSE) restricted TRUE (default) BEID limited current version source prefFilter TRUE (default) BEID limited prefered identifiers exist ... method specific parameters BEID conversion","code":""},{"path":"https://patzaw.github.io/BED/reference/focusOnScope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Focus a BE related object on a specific identifier (BEID) scope — focusOnScope","text":"Depends class x","code":""},{"path":"https://patzaw.github.io/BED/reference/forgetBedConnection.html","id":null,"dir":"Reference","previous_headings":"","what":"Forget a BED connection — forgetBedConnection","title":"Forget a BED connection — forgetBedConnection","text":"Forget BED connection","code":""},{"path":"https://patzaw.github.io/BED/reference/forgetBedConnection.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Forget a BED connection — forgetBedConnection","text":"","code":"forgetBedConnection(connection, save = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/forgetBedConnection.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Forget a BED connection — forgetBedConnection","text":"connection id connection forget. save logical. set TRUE save updated list connections file space (default FALSE comply CRAN policies).","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/genBePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct CQL sub-query to map 2 biological entity — genBePath","title":"Construct CQL sub-query to map 2 biological entity — genBePath","text":"Internal use","code":""},{"path":"https://patzaw.github.io/BED/reference/genBePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct CQL sub-query to map 2 biological entity — genBePath","text":"","code":"genBePath(from, to, onlyR = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/genBePath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct CQL sub-query to map 2 biological entity — genBePath","text":"one biological entity () one biological entity () onlyR logical. TRUE (default: FALSE) returns names relationships cypher sub-query","code":""},{"path":"https://patzaw.github.io/BED/reference/genBePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct CQL sub-query to map 2 biological entity — genBePath","text":"character value corresponding sub-query. , onlyR, character vector names relationships.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/genProbePath.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the biological entity (BE) targeted by probes and construct the CQL sub-query to map probes to the BE — genProbePath","title":"Identify the biological entity (BE) targeted by probes and construct the CQL sub-query to map probes to the BE — genProbePath","text":"Internal use","code":""},{"path":"https://patzaw.github.io/BED/reference/genProbePath.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the biological entity (BE) targeted by probes and construct the CQL sub-query to map probes to the BE — genProbePath","text":"","code":"genProbePath(platform)"},{"path":"https://patzaw.github.io/BED/reference/genProbePath.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the biological entity (BE) targeted by probes and construct the CQL sub-query to map probes to the BE — genProbePath","text":"platform platform probes","code":""},{"path":"https://patzaw.github.io/BED/reference/genProbePath.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the biological entity (BE) targeted by probes and construct the CQL sub-query to map probes to the BE — genProbePath","text":"character value corresponding sub-query. attr(,\"\") correspond targeted probes","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/geneIDsToAllScopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Find all GeneID, ObjectID, TranscriptID, PeptideID and ProbeID corresponding to a Gene in any organism — geneIDsToAllScopes","title":"Find all GeneID, ObjectID, TranscriptID, PeptideID and ProbeID corresponding to a Gene in any organism — geneIDsToAllScopes","text":"Find GeneID, ObjectID, TranscriptID, PeptideID ProbeID corresponding Gene organism","code":""},{"path":"https://patzaw.github.io/BED/reference/geneIDsToAllScopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find all GeneID, ObjectID, TranscriptID, PeptideID and ProbeID corresponding to a Gene in any organism — geneIDsToAllScopes","text":"","code":"geneIDsToAllScopes(   geneids,   source,   organism,   entities = NULL,   orthologs = TRUE,   canonical_symbols = TRUE )"},{"path":"https://patzaw.github.io/BED/reference/geneIDsToAllScopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find all GeneID, ObjectID, TranscriptID, PeptideID and ProbeID corresponding to a Gene in any organism — geneIDsToAllScopes","text":"geneids character vector gene identifiers source source gene identifiers. Guessed provided organism gene organism. Guessed provided entities numeric vector gene entity. NULL (default), geneids, source organism arguments used identify genes. carefull using entities identifiers stable. orthologs return identifiers orthologs canonical_symbols return canonical symbols (default: TRUE).","code":""},{"path":"https://patzaw.github.io/BED/reference/geneIDsToAllScopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find all GeneID, ObjectID, TranscriptID, PeptideID and ProbeID corresponding to a Gene in any organism — geneIDsToAllScopes","text":"data.frame following fields: value: identifier preferred: preferred identifier scope : type organism: organism source: source identifier canonical: canonical gene product (logical) symbol: canonical symbol identifier Gene_entity: gene entity input GeneID (optional): gene ID input Gene_source (optional): gene source input Gene_organism (optional): gene organism input","code":""},{"path":"https://patzaw.github.io/BED/reference/getAllBeIdSources.html","id":null,"dir":"Reference","previous_headings":"","what":"List all the source databases of BE identifiers whatever the BE type — getAllBeIdSources","title":"List all the source databases of BE identifiers whatever the BE type — getAllBeIdSources","text":"List source databases identifiers whatever type","code":""},{"path":"https://patzaw.github.io/BED/reference/getAllBeIdSources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all the source databases of BE identifiers whatever the BE type — getAllBeIdSources","text":"","code":"getAllBeIdSources(recache = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/getAllBeIdSources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all the source databases of BE identifiers whatever the BE type — getAllBeIdSources","text":"recache boolean indicating CQL query run even table already cache","code":""},{"path":"https://patzaw.github.io/BED/reference/getAllBeIdSources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all the source databases of BE identifiers whatever the BE type — getAllBeIdSources","text":"data.frame indicating related ID source (database).","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIdConvTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a conversion table between biological entity (BE) identifiers — getBeIdConvTable","title":"Get a conversion table between biological entity (BE) identifiers — getBeIdConvTable","text":"Get conversion table biological entity () identifiers","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdConvTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a conversion table between biological entity (BE) identifiers — getBeIdConvTable","text":"","code":"getBeIdConvTable(   from,   to = from,   from.source,   to.source,   organism,   caseSensitive = FALSE,   canonical = FALSE,   restricted = TRUE,   entity = TRUE,   verbose = FALSE,   recache = FALSE,   filter = NULL,   limForCache = 100 )"},{"path":"https://patzaw.github.io/BED/reference/getBeIdConvTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a conversion table between biological entity (BE) identifiers — getBeIdConvTable","text":"one \"Probe\" one \"Probe\" .source ID database probe platform Probe .source ID database probe platform Probe organism organism name caseSensitive TRUE case provided symbols taken account conversion selection. option affect conversion \"Symbol\" (default: caseSensitive=FALSE). conversion case sensitive. canonical TRUE, returns canonical \"Symbol\". (default: FALSE) restricted boolean indicating results restricted current version BEID db. FALSE former BEID also returned: Depending history can take long time return large result! entity boolean indicating technical ID returned verbose boolean indicating CQL query displayed recache boolean indicating CQL query run even table already cache filter character vector filter IDs. NULL (default), result filtered: IDs taken account. limForCache filter limForCache results collected IDs (beyond provided ids) cached futur queries. , results collected provided ids cached.","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdConvTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a conversion table between biological entity (BE) identifiers — getBeIdConvTable","text":"data.frame mapping IDs following fields: : ID : ID entity: (optional) technical ID ","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIdConvTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a conversion table between biological entity (BE) identifiers — getBeIdConvTable","text":"","code":"if (FALSE) { getBeIdConvTable(     from=\"Gene\", from.source=\"EntrezGene\",     to.source=\"Ens_gene\",     organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getBeIdDescription.html","id":null,"dir":"Reference","previous_headings":"","what":"Get description of Biological Entity identifiers — getBeIdDescription","title":"Get description of Biological Entity identifiers — getBeIdDescription","text":"description can used annotating tables graph based IDs.","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdDescription.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get description of Biological Entity identifiers — getBeIdDescription","text":"","code":"getBeIdDescription(ids, be, source, organism, ...)"},{"path":"https://patzaw.github.io/BED/reference/getBeIdDescription.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get description of Biological Entity identifiers — getBeIdDescription","text":"ids list identifiers one . Guessed provided source ID database. Guessed provided organism organism name. Guessed provided ... arguments getBeIdNames getBeIdSymbols functions","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdDescription.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get description of Biological Entity identifiers — getBeIdDescription","text":"data.frame providing IDs (row.names provided IDs): id: ID symbol: symbol name: corresponding name","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIdDescription.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get description of Biological Entity identifiers — getBeIdDescription","text":"","code":"if (FALSE) { getBeIdDescription(    ids=c(\"10\", \"100\"),    be=\"Gene\",    source=\"EntrezGene\",    organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getBeIdNameTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of biological entity (BE) identifiers and names — getBeIdNameTable","title":"Get a table of biological entity (BE) identifiers and names — getBeIdNameTable","text":"Get table biological entity () identifiers names","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdNameTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of biological entity (BE) identifiers and names — getBeIdNameTable","text":"","code":"getBeIdNameTable(   be,   source,   organism,   restricted,   entity = TRUE,   verbose = FALSE,   recache = FALSE,   filter = NULL )"},{"path":"https://patzaw.github.io/BED/reference/getBeIdNameTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a table of biological entity (BE) identifiers and names — getBeIdNameTable","text":"one source ID database organism organism name restricted boolean indicating results restricted direct names entity boolean indicating technical ID returned verbose boolean indicating CQL query displayed recache boolean indicating CQL query run even table already cache filter character vector filter id. NULL (default), result filtered: IDs taken account.","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdNameTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of biological entity (BE) identifiers and names — getBeIdNameTable","text":"data.frame following fields: id: ID name: name direct: false symbol directly associated ID entity: (optional) technical ID ","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIdNameTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a table of biological entity (BE) identifiers and names — getBeIdNameTable","text":"","code":"if (FALSE) { getBeIdNameTable(    be=\"Gene\",    source=\"EntrezGene\",    organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getBeIdNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get names of Biological Entity identifiers — getBeIdNames","title":"Get names of Biological Entity identifiers — getBeIdNames","text":"Get names Biological Entity identifiers","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get names of Biological Entity identifiers — getBeIdNames","text":"","code":"getBeIdNames(ids, be, source, organism, limForCache = 4000, ...)"},{"path":"https://patzaw.github.io/BED/reference/getBeIdNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get names of Biological Entity identifiers — getBeIdNames","text":"ids list identifiers one . Guessed provided source ID database. Guessed provided organism organism name. Guessed provided limForCache ids limForCache results collected IDs (beyond provided ids) cached futur queries. , results collected provided ids cached. ... params getBeIdNameTable function","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get names of Biological Entity identifiers — getBeIdNames","text":"data.frame mapping IDs names following fields: id: ID name: corresponding name direct: true name directly related ID entity: (optional) technical ID ","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIdNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get names of Biological Entity identifiers — getBeIdNames","text":"","code":"if (FALSE) { getBeIdNames(    ids=c(\"10\", \"100\"),    be=\"Gene\",    source=\"EntrezGene\",    organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbolTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a table of biological entity (BE) identifiers and symbols — getBeIdSymbolTable","title":"Get a table of biological entity (BE) identifiers and symbols — getBeIdSymbolTable","text":"Get table biological entity () identifiers symbols","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbolTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a table of biological entity (BE) identifiers and symbols — getBeIdSymbolTable","text":"","code":"getBeIdSymbolTable(   be,   source,   organism,   restricted,   entity = TRUE,   verbose = FALSE,   recache = FALSE,   filter = NULL )"},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbolTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a table of biological entity (BE) identifiers and symbols — getBeIdSymbolTable","text":"one source ID database organism organism name restricted boolean indicating results restricted direct symbols entity boolean indicating technical ID returned verbose boolean indicating CQL query displayed recache boolean indicating CQL query run even table already cache filter character vector filter id. NULL (default), result filtered: IDs taken account.","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbolTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a table of biological entity (BE) identifiers and symbols — getBeIdSymbolTable","text":"data.frame following fields: id: ID symbol: symbol canonical: true symbol canonical direct ID direct: false symbol directly associated ID entity: (optional) technical ID ","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbolTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get a table of biological entity (BE) identifiers and symbols — getBeIdSymbolTable","text":"","code":"if (FALSE) { getBeIdSymbolTable(    be=\"Gene\",    source=\"EntrezGene\",    organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Get symbols of Biological Entity identifiers — getBeIdSymbols","title":"Get symbols of Biological Entity identifiers — getBeIdSymbols","text":"Get symbols Biological Entity identifiers","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get symbols of Biological Entity identifiers — getBeIdSymbols","text":"","code":"getBeIdSymbols(ids, be, source, organism, limForCache = 4000, ...)"},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get symbols of Biological Entity identifiers — getBeIdSymbols","text":"ids list identifiers one . Guessed provided source ID database. Guessed provided organism organism name. Guessed provided limForCache ids limForCache. Results collected IDs (beyond provided ids) cached futur queries. , results collected provided ids cached. ... params getBeIdSymbolTable function","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbols.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get symbols of Biological Entity identifiers — getBeIdSymbols","text":"data.frame following fields: id: ID symbol: symbol canonical: true symbol canonical direct ID direct: false symbol directly associated ID entity: (optional) technical ID ","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIdSymbols.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get symbols of Biological Entity identifiers — getBeIdSymbols","text":"","code":"if (FALSE) { getBeIdSymbols(    ids=c(\"10\", \"100\"),    be=\"Gene\",    source=\"EntrezGene\",    organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getBeIdURL.html","id":null,"dir":"Reference","previous_headings":"","what":"Get reference URLs for BE IDs — getBeIdURL","title":"Get reference URLs for BE IDs — getBeIdURL","text":"Get reference URLs IDs","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdURL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get reference URLs for BE IDs — getBeIdURL","text":"","code":"getBeIdURL(ids, databases)"},{"path":"https://patzaw.github.io/BED/reference/getBeIdURL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get reference URLs for BE IDs — getBeIdURL","text":"ids ID databases databases ID taken (one database provided chosen ids)","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdURL.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get reference URLs for BE IDs — getBeIdURL","text":"character vector length ids corresponding relevant URLs. NA returned URL corresponding provided database.","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIdURL.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get reference URLs for BE IDs — getBeIdURL","text":"","code":"if (FALSE) { getBeIdURL(c(\"100\", \"ENSG00000145335\"), c(\"EntrezGene\", \"Ens_gene\")) }"},{"path":"https://patzaw.github.io/BED/reference/getBeIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get biological entities identifiers — getBeIds","title":"Get biological entities identifiers — getBeIds","text":"Get biological entities identifiers","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get biological entities identifiers — getBeIds","text":"","code":"getBeIds(   be = c(listBe(), \"Probe\"),   source,   organism = NA,   restricted,   entity = TRUE,   attributes = NULL,   verbose = FALSE,   recache = FALSE,   filter = NULL,   caseSensitive = FALSE,   limForCache = 100,   bef = NULL )"},{"path":"https://patzaw.github.io/BED/reference/getBeIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get biological entities identifiers — getBeIds","text":"one \"Probe\" source ID database \"Symbol\" probe platform Probe organism organism name restricted boolean indicating results restricted current version BEID db. FALSE former BEID also returned. entity boolean indicating technical ID returned attributes character vector listing attributes returned. verbose boolean indicating CQL query displayed recache boolean indicating CQL query run even table already cache filter character vector filter id. NULL (default), result filtered: IDs taken account. caseSensitive TRUE case provided symbols taken account. option affect \"Symbol\" source (default: caseSensitive=FALSE). limForCache filter limForCache results collected IDs (beyond provided ids) cached futur queries. , results collected provided ids cached. bef internal use ","code":""},{"path":"https://patzaw.github.io/BED/reference/getBeIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get biological entities identifiers — getBeIds","text":"data.frame mapping IDs following fields: id: ID : entity TRUE technical ID db.version: \"Probe\" source \"Symbol\" version DB db.deprecated: \"Probe\" source \"Symbol\" value ID deprecated FALSE canonical: source \"Symbol\" TRUE symbol canonical organism: \"Probe\" organism targeted attributes part query, additional columns . Scope (\"\", \"source\" \"organism\") provided named list \"scope\" attributes: attr(x, \"scope\")","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getBeIds.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get biological entities identifiers — getBeIds","text":"","code":"if (FALSE) { beids <- getBeIds(be=\"Gene\", source=\"EntrezGene\", organism=\"human\", restricted=TRUE) }"},{"path":"https://patzaw.github.io/BED/reference/getDirectOrigin.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the direct origin of BE identifiers — getDirectOrigin","title":"Get the direct origin of BE identifiers — getDirectOrigin","text":"origin directly taken provided original database. function return indirect relationships.","code":""},{"path":"https://patzaw.github.io/BED/reference/getDirectOrigin.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the direct origin of BE identifiers — getDirectOrigin","text":"","code":"getDirectOrigin(   ids,   sources = NULL,   process = c(\"is_expressed_as\", \"is_translated_in\", \"codes_for\") )"},{"path":"https://patzaw.github.io/BED/reference/getDirectOrigin.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the direct origin of BE identifiers — getDirectOrigin","text":"ids list product identifiers sources character vector corresponding possible product ID sources. NULL (default), sources considered process production process among: \"is_expressed_as\", \"is_translated_in\", \"codes_for\".","code":""},{"path":"https://patzaw.github.io/BED/reference/getDirectOrigin.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the direct origin of BE identifiers — getDirectOrigin","text":"data.frame following columns: origin: origin identifiers osource: origin database product: product identifiers psource: production database canonical: whether production process canonical process also returned attribute data.frame.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getDirectOrigin.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the direct origin of BE identifiers — getDirectOrigin","text":"","code":"if (FALSE) { oriId <- c(\"XP_016868427\", \"NP_001308979\") res <- getDirectOrigin(    ids=oriId,    source=\"RefSeq_peptide\",    process=\"is_translated_in\" ) attr(res, \"process\") }"},{"path":"https://patzaw.github.io/BED/reference/getDirectProduct.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the direct product of BE identifiers — getDirectProduct","title":"Get the direct product of BE identifiers — getDirectProduct","text":"product directly taken provided original database. function return indirect relationships.","code":""},{"path":"https://patzaw.github.io/BED/reference/getDirectProduct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the direct product of BE identifiers — getDirectProduct","text":"","code":"getDirectProduct(   ids,   sources = NULL,   process = c(\"is_expressed_as\", \"is_translated_in\", \"codes_for\"),   canonical = NA )"},{"path":"https://patzaw.github.io/BED/reference/getDirectProduct.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the direct product of BE identifiers — getDirectProduct","text":"ids list origin identifiers sources character vector corresponding possible origin ID sources. NULL (default), sources considered process production process among: \"is_expressed_as\", \"is_translated_in\", \"codes_for\". canonical TRUE returns canonical production process. FALSE returns non-canonical production processes. NA (default) canonical information taken account.","code":""},{"path":"https://patzaw.github.io/BED/reference/getDirectProduct.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the direct product of BE identifiers — getDirectProduct","text":"data.frame following columns: origin: origin identifiers osource: origin database product: product identifiers psource: production database canonical: whether production process canonical process also returned attribute data.frame.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getDirectProduct.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the direct product of BE identifiers — getDirectProduct","text":"","code":"if (FALSE) { oriId <- c(\"10\", \"100\") res <- getDirectProduct(    ids=oriId,    source=\"EntrezGene\",    process=\"is_expressed_as\",    canonical=NA ) attr(res, \"process\") }"},{"path":"https://patzaw.github.io/BED/reference/getEnsemblGeneIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Download Ensembl DB and load gene information in BED — getEnsemblGeneIds","title":"Feeding BED: Download Ensembl DB and load gene information in BED — getEnsemblGeneIds","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/getEnsemblGeneIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Download Ensembl DB and load gene information in BED — getEnsemblGeneIds","text":"","code":"getEnsemblGeneIds(organism, release, gv, ddir, dbCref, dbAss, canChromosomes)"},{"path":"https://patzaw.github.io/BED/reference/getEnsemblGeneIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Download Ensembl DB and load gene information in BED — getEnsemblGeneIds","text":"organism character vector 1 element corresponding organism interest (e.g. \"Homo sapiens\") release Ensembl release interest (e.g. \"83\") gv genome version (e.g. \"38\") ddir path directory data saved dbCref named vector characters providing cross-reference DB interest. DB also used find indirect ID associations. dbAss named vector characters providing associated DB interest. Unlike DB dbCref parameter, DB used indirect ID associations: IDs linked Ensembl IDs. canChromosomes canonical chromosmomes considered preferred ID (e.g. c(1:22, \"X\", \"Y\", \"MT\") human)","code":""},{"path":"https://patzaw.github.io/BED/reference/getEnsemblPeptideIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Download Ensembl DB and load peptide information in BED — getEnsemblPeptideIds","title":"Feeding BED: Download Ensembl DB and load peptide information in BED — getEnsemblPeptideIds","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/getEnsemblPeptideIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Download Ensembl DB and load peptide information in BED — getEnsemblPeptideIds","text":"","code":"getEnsemblPeptideIds(organism, release, gv, ddir, dbCref, canChromosomes)"},{"path":"https://patzaw.github.io/BED/reference/getEnsemblPeptideIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Download Ensembl DB and load peptide information in BED — getEnsemblPeptideIds","text":"organism character vector 1 element corresponding organism interest (e.g. \"Homo sapiens\") release Ensembl release interest (e.g. \"83\") gv genome version (e.g. \"38\") ddir path directory data saved dbCref named vector characters providing cross-reference DB interest. DB also used find indirect ID associations. canChromosomes canonical chromosmomes considered preferred ID (e.g. c(1:22, \"X\", \"Y\", \"MT\") human)","code":""},{"path":"https://patzaw.github.io/BED/reference/getEnsemblTranscriptIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Download Ensembl DB and load transcript information in BED — getEnsemblTranscriptIds","title":"Feeding BED: Download Ensembl DB and load transcript information in BED — getEnsemblTranscriptIds","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/getEnsemblTranscriptIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Download Ensembl DB and load transcript information in BED — getEnsemblTranscriptIds","text":"","code":"getEnsemblTranscriptIds(organism, release, gv, ddir, dbCref, canChromosomes)"},{"path":"https://patzaw.github.io/BED/reference/getEnsemblTranscriptIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Download Ensembl DB and load transcript information in BED — getEnsemblTranscriptIds","text":"organism character vector 1 element corresponding organism interest (e.g. \"Homo sapiens\") release Ensembl release interest (e.g. \"83\") gv genome version (e.g. \"38\") ddir path directory data saved dbCref named vector characters providing cross-reference DB interest. DB also used find indirect ID associations. canChromosomes canonical chromosmomes considered preferred ID (e.g. c(1:22, \"X\", \"Y\", \"MT\") human)","code":""},{"path":"https://patzaw.github.io/BED/reference/getGeneDescription.html","id":null,"dir":"Reference","previous_headings":"","what":"Get description of genes corresponding to Biological Entity identifiers — getGeneDescription","title":"Get description of genes corresponding to Biological Entity identifiers — getGeneDescription","text":"description can used annotating tables graph based IDs.","code":""},{"path":"https://patzaw.github.io/BED/reference/getGeneDescription.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get description of genes corresponding to Biological Entity identifiers — getGeneDescription","text":"","code":"getGeneDescription(   ids,   be,   source,   organism,   gsource = largestBeSource(be = \"Gene\", organism = organism, rel = \"is_known_as\",     restricted = TRUE),   limForCache = 2000 )"},{"path":"https://patzaw.github.io/BED/reference/getGeneDescription.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get description of genes corresponding to Biological Entity identifiers — getGeneDescription","text":"ids list identifiers one . Guessed provided source ID database. Guessed provided organism organism name. Guessed provided gsource source gene IDs use. chosen automatically default. limForCache number ids description gathered IDs cached  futur queries.","code":""},{"path":"https://patzaw.github.io/BED/reference/getGeneDescription.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get description of genes corresponding to Biological Entity identifiers — getGeneDescription","text":"data.frame providing IDs (row.names provided IDs): id: ID gsource: Gene ID column name provides source used identifier symbol: associated gene symbols name: associated gene names","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getGeneDescription.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get description of genes corresponding to Biological Entity identifiers — getGeneDescription","text":"","code":"if (FALSE) { getGeneDescription(    ids=c(\"1438_at\", \"1552335_at\"),    be=\"Probe\",    source=\"GPL570\",    organism=\"human\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getHomTable.html","id":null,"dir":"Reference","previous_headings":"","what":"Get gene homologs between 2 organisms — getHomTable","title":"Get gene homologs between 2 organisms — getHomTable","text":"Get gene homologs 2 organisms","code":""},{"path":"https://patzaw.github.io/BED/reference/getHomTable.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get gene homologs between 2 organisms — getHomTable","text":"","code":"getHomTable(   from.org,   to.org,   from.source = \"Ens_gene\",   to.source = from.source,   restricted = TRUE,   verbose = FALSE,   recache = FALSE,   filter = NULL,   limForCache = 100 )"},{"path":"https://patzaw.github.io/BED/reference/getHomTable.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get gene homologs between 2 organisms — getHomTable","text":".org organism name .org organism name .source gene ID database .source gene ID database restricted boolean indicating results restricted current version BEID db. FALSE former BEID also returned: Depending history can take long time return large result! verbose boolean indicating CQL query displayed recache boolean indicating CQL query run even table already cache filter character vector filter IDs. NULL (default), result filtered: IDs taken account. limForCache filter limForCache results collected IDs (beyond provided ids) cached futur queries. , results collected provided ids cached.","code":""},{"path":"https://patzaw.github.io/BED/reference/getHomTable.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get gene homologs between 2 organisms — getHomTable","text":"data.frame mapping gene IDs following fields: : gene ID : gene ID","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getHomTable.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get gene homologs between 2 organisms — getHomTable","text":"","code":"if (FALSE) { getHomTable(    from.org=\"human\",    to.org=\"mouse\" ) }"},{"path":"https://patzaw.github.io/BED/reference/getNcbiGeneTransPep.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Download NCBI gene DATA and load gene, transcript and peptide information in BED — getNcbiGeneTransPep","title":"Feeding BED: Download NCBI gene DATA and load gene, transcript and peptide information in BED — getNcbiGeneTransPep","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/getNcbiGeneTransPep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Download NCBI gene DATA and load gene, transcript and peptide information in BED — getNcbiGeneTransPep","text":"","code":"getNcbiGeneTransPep(organism, reDumpThr = 1e+05, ddir, curDate)"},{"path":"https://patzaw.github.io/BED/reference/getNcbiGeneTransPep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Download NCBI gene DATA and load gene, transcript and peptide information in BED — getNcbiGeneTransPep","text":"organism character vector 1 element corresponding organism interest (e.g. \"Homo sapiens\") reDumpThr time difference threshold 2 downloads ddir path directory data saved curDate current date given Sys.Date","code":""},{"path":"https://patzaw.github.io/BED/reference/getOrgNames.html","id":null,"dir":"Reference","previous_headings":"","what":"Get organism names from taxonomy IDs — getOrgNames","title":"Get organism names from taxonomy IDs — getOrgNames","text":"Get organism names taxonomy IDs","code":""},{"path":"https://patzaw.github.io/BED/reference/getOrgNames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get organism names from taxonomy IDs — getOrgNames","text":"","code":"getOrgNames(taxID = NULL)"},{"path":"https://patzaw.github.io/BED/reference/getOrgNames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get organism names from taxonomy IDs — getOrgNames","text":"taxID vector taxonomy IDs. NULL (default) function lists taxonomy IDs available DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/getOrgNames.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get organism names from taxonomy IDs — getOrgNames","text":"data.frame mapping taxonomy IDs organism names following fields: taxID: taxonomy ID name: organism name nameClass: class name","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getOrgNames.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get organism names from taxonomy IDs — getOrgNames","text":"","code":"if (FALSE) { getOrgNames(c(\"9606\", \"10090\")) getOrgNames(\"9606\") }"},{"path":"https://patzaw.github.io/BED/reference/getRelevantIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Get relevant IDs for a formerly identified BE in a context of interest — getRelevantIds","title":"Get relevant IDs for a formerly identified BE in a context of interest — getRelevantIds","text":"DEPRECATED: use searchBeid geneIDsToAllScopes instead. function meant used searchId order implement dictonary identifiers interest. First searchId function used search term. getRelevantIds function used find corresponding IDs context interest.","code":""},{"path":"https://patzaw.github.io/BED/reference/getRelevantIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get relevant IDs for a formerly identified BE in a context of interest — getRelevantIds","text":"","code":"getRelevantIds(   d,   selected = 1,   be = c(listBe(), \"Probe\"),   source,   organism,   restricted = TRUE,   simplify = TRUE,   verbose = FALSE )"},{"path":"https://patzaw.github.io/BED/reference/getRelevantIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get relevant IDs for a formerly identified BE in a context of interest — getRelevantIds","text":"d data.frame returned searchId. selected rows interest d context interest source source identifier context interest organism organism context interest restricted boolean indicating results restricted current version BEID db. FALSE former BEID also returned: Depending history can take long time return large result! simplify TRUE (default) duplicated IDs removed output verbose TRUE, CQL query shown","code":""},{"path":"https://patzaw.github.io/BED/reference/getRelevantIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get relevant IDs for a formerly identified BE in a context of interest — getRelevantIds","text":"d data.frame new column providing relevant ID context interest without gene field. Scope (\"\", \"source\" \"organism\") provided named list \"scope\" attributes: attr(x, \"scope\")","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getTargetedBe.html","id":null,"dir":"Reference","previous_headings":"","what":"Identify the biological entity (BE) targeted by probes — getTargetedBe","title":"Identify the biological entity (BE) targeted by probes — getTargetedBe","text":"Identify biological entity () targeted probes","code":""},{"path":"https://patzaw.github.io/BED/reference/getTargetedBe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identify the biological entity (BE) targeted by probes — getTargetedBe","text":"","code":"getTargetedBe(platform)"},{"path":"https://patzaw.github.io/BED/reference/getTargetedBe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identify the biological entity (BE) targeted by probes — getTargetedBe","text":"platform platform probes","code":""},{"path":"https://patzaw.github.io/BED/reference/getTargetedBe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identify the biological entity (BE) targeted by probes — getTargetedBe","text":"targeted platform","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getTargetedBe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identify the biological entity (BE) targeted by probes — getTargetedBe","text":"","code":"if (FALSE) { getTargetedBe(\"GPL570\") }"},{"path":"https://patzaw.github.io/BED/reference/getTaxId.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomy ID of an organism name — getTaxId","title":"Get taxonomy ID of an organism name — getTaxId","text":"Get taxonomy ID organism name","code":""},{"path":"https://patzaw.github.io/BED/reference/getTaxId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomy ID of an organism name — getTaxId","text":"","code":"getTaxId(name)"},{"path":"https://patzaw.github.io/BED/reference/getTaxId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomy ID of an organism name — getTaxId","text":"name name organism","code":""},{"path":"https://patzaw.github.io/BED/reference/getTaxId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomy ID of an organism name — getTaxId","text":"vector taxonomy ID","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/getTaxId.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomy ID of an organism name — getTaxId","text":"","code":"if (FALSE) { getTaxId(\"human\") }"},{"path":"https://patzaw.github.io/BED/reference/getUniprot.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Download Uniprot information in BED — getUniprot","title":"Feeding BED: Download Uniprot information in BED — getUniprot","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/getUniprot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Download Uniprot information in BED — getUniprot","text":"","code":"getUniprot(organism, taxDiv, release, ddir)"},{"path":"https://patzaw.github.io/BED/reference/getUniprot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Download Uniprot information in BED — getUniprot","text":"organism character vector 1 element corresponding organism interest (e.g. \"Homo sapiens\") taxDiv taxonomic division organism belong (e.g., \"human\", \"rodents\", \"mammals\", \"vertebrates\") release release interest (check already downloaded) ddir path directory data saved","code":""},{"path":"https://patzaw.github.io/BED/reference/guessIdScope.html","id":null,"dir":"Reference","previous_headings":"","what":"Guess biological entity (BE), database source and organism of a vector of identifiers. — guessIdScope","title":"Guess biological entity (BE), database source and organism of a vector of identifiers. — guessIdScope","text":"Guess biological entity (), database source organism vector identifiers.","code":""},{"path":"https://patzaw.github.io/BED/reference/guessIdScope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Guess biological entity (BE), database source and organism of a vector of identifiers. — guessIdScope","text":"","code":"guessIdScope(ids, be, source, organism, tcLim = 100)  guessIdOrigin(...)"},{"path":"https://patzaw.github.io/BED/reference/guessIdScope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Guess biological entity (BE), database source and organism of a vector of identifiers. — guessIdScope","text":"ids character vector identifiers one \"Probe\". Guessed provided source ID database \"Symbol\" probe platform Probe. Guessed provided organism organism name. Guessed provided tcLim number identifiers check guess origin whole set. Inf ==> limit. ... params guessIdScope","code":""},{"path":"https://patzaw.github.io/BED/reference/guessIdScope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Guess biological entity (BE), database source and organism of a vector of identifiers. — guessIdScope","text":"list (NULL match): : character vector length 1 providing best guess (NA inconsistent user input: , source organism) source: character vector length 1 providing best source guess (NA inconsistent user input: , source organism) *organism$: character vector length 1 providing best organism guess (NA inconsistent user input: , source organism) \"details\" attribute (`attr(x, \"details\")``) data frame providing numbers supporting guess","code":""},{"path":"https://patzaw.github.io/BED/reference/guessIdScope.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Guess biological entity (BE), database source and organism of a vector of identifiers. — guessIdScope","text":"guessIdOrigin(): Deprecated version guessIdScope","code":""},{"path":"https://patzaw.github.io/BED/reference/guessIdScope.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Guess biological entity (BE), database source and organism of a vector of identifiers. — guessIdScope","text":"","code":"if (FALSE) { guessIdScope(ids=c(\"10\", \"100\")) }"},{"path":"https://patzaw.github.io/BED/reference/identicalScopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if two objects have the same BEID scope — identicalScopes","title":"Check if two objects have the same BEID scope — identicalScopes","text":"Check two objects BEID scope","code":""},{"path":"https://patzaw.github.io/BED/reference/identicalScopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if two objects have the same BEID scope — identicalScopes","text":"","code":"identicalScopes(x, y)"},{"path":"https://patzaw.github.io/BED/reference/identicalScopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if two objects have the same BEID scope — identicalScopes","text":"x object test y object test","code":""},{"path":"https://patzaw.github.io/BED/reference/identicalScopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if two objects have the same BEID scope — identicalScopes","text":"logical indicating 2 scopes identical","code":""},{"path":"https://patzaw.github.io/BED/reference/is.BEIDList.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the provided object is a BEIDList — is.BEIDList","title":"Check if the provided object is a BEIDList — is.BEIDList","text":"Check provided object BEIDList","code":""},{"path":"https://patzaw.github.io/BED/reference/is.BEIDList.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the provided object is a BEIDList — is.BEIDList","text":"","code":"is.BEIDList(x)"},{"path":"https://patzaw.github.io/BED/reference/is.BEIDList.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the provided object is a BEIDList — is.BEIDList","text":"x object check","code":""},{"path":"https://patzaw.github.io/BED/reference/is.BEIDList.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the provided object is a BEIDList — is.BEIDList","text":"logical value","code":""},{"path":"https://patzaw.github.io/BED/reference/largestBeSource.html","id":null,"dir":"Reference","previous_headings":"","what":"Autoselect source of biological entity identifiers — largestBeSource","title":"Autoselect source of biological entity identifiers — largestBeSource","text":"selection based direct identifiers","code":""},{"path":"https://patzaw.github.io/BED/reference/largestBeSource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Autoselect source of biological entity identifiers — largestBeSource","text":"","code":"largestBeSource(   be,   organism,   rel = NA,   restricted = TRUE,   exclude = c(\"BEDTech_gene\", \"BEDTech_transcript\") )"},{"path":"https://patzaw.github.io/BED/reference/largestBeSource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Autoselect source of biological entity identifiers — largestBeSource","text":"biological entity focus organism organism focus rel type relationship consider query (e.g. \"is_member_of\") order focus specific information. NA (default) taken account whatever available relationships. restricted boolean indicating results restricted current version BEID db. FALSE former BEID also taken account. exclude database exclude possible selection. Used filter technical database names \"BEDTech_gene\" \"BEDTech_transcript\" used manage orphan IDs (linked gene based information taken sources)","code":""},{"path":"https://patzaw.github.io/BED/reference/largestBeSource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Autoselect source of biological entity identifiers — largestBeSource","text":"name selected source. selected source one providing largest number current identifiers.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/largestBeSource.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Autoselect source of biological entity identifiers — largestBeSource","text":"","code":"if (FALSE) { largestBeSource(be=\"Gene\", \"Mus musculus\") }"},{"path":"https://patzaw.github.io/BED/reference/listBe.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists all the biological entities (BE) available in the BED database — listBe","title":"Lists all the biological entities (BE) available in the BED database — listBe","text":"Lists biological entities () available BED database","code":""},{"path":"https://patzaw.github.io/BED/reference/listBe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists all the biological entities (BE) available in the BED database — listBe","text":"","code":"listBe()"},{"path":"https://patzaw.github.io/BED/reference/listBe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists all the biological entities (BE) available in the BED database — listBe","text":"character vector biological entities ()","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/listBeIdSources.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists all the databases taken into account in the BED database for a biological entity (BE) — listBeIdSources","title":"Lists all the databases taken into account in the BED database for a biological entity (BE) — listBeIdSources","text":"Lists databases taken account BED database biological entity ()","code":""},{"path":"https://patzaw.github.io/BED/reference/listBeIdSources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists all the databases taken into account in the BED database for a biological entity (BE) — listBeIdSources","text":"","code":"listBeIdSources(   be = listBe(),   organism,   direct = FALSE,   rel = NA,   restricted = FALSE,   recache = FALSE,   verbose = FALSE,   exclude = c() )"},{"path":"https://patzaw.github.io/BED/reference/listBeIdSources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists all the databases taken into account in the BED database for a biological entity (BE) — listBeIdSources","text":"focus organism name organism focus . direct logical value indicating \"direct\" identifiers considered rel type relationship consider query (e.g. \"is_member_of\") order focus specific information. NA (default) taken account whatever available relationships. restricted boolean indicating results restricted current version BEID db. FALSE former BEID also returned. impact direct set TRUE. recache boolean indicating CQL query run even table already cache verbose boolean indicating CQL query shown. exclude database exclude possible selection. Used filter technical database names \"BEDTech_gene\" \"BEDTech_transcript\" used manage orphan IDs (linked gene based information taken sources)","code":""},{"path":"https://patzaw.github.io/BED/reference/listBeIdSources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists all the databases taken into account in the BED database for a biological entity (BE) — listBeIdSources","text":"data.frame indicating number ID available database following fields: database: database name nbBe: number distinct entities nbId: number identifiers : focus","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/listBeIdSources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lists all the databases taken into account in the BED database for a biological entity (BE) — listBeIdSources","text":"","code":"if (FALSE) { listBeIdSources(be=\"Transcript\", organism=\"mouse\") }"},{"path":"https://patzaw.github.io/BED/reference/listDBAttributes.html","id":null,"dir":"Reference","previous_headings":"","what":"List all attributes provided by a BEDB — listDBAttributes","title":"List all attributes provided by a BEDB — listDBAttributes","text":"List attributes provided BEDB","code":""},{"path":"https://patzaw.github.io/BED/reference/listDBAttributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all attributes provided by a BEDB — listDBAttributes","text":"","code":"listDBAttributes(dbname)"},{"path":"https://patzaw.github.io/BED/reference/listDBAttributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all attributes provided by a BEDB — listDBAttributes","text":"dbname name database","code":""},{"path":"https://patzaw.github.io/BED/reference/listDBAttributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all attributes provided by a BEDB — listDBAttributes","text":"character vector attribute names","code":""},{"path":"https://patzaw.github.io/BED/reference/listOrganisms.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists all the organisms available in the BED database — listOrganisms","title":"Lists all the organisms available in the BED database — listOrganisms","text":"Lists organisms available BED database","code":""},{"path":"https://patzaw.github.io/BED/reference/listOrganisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists all the organisms available in the BED database — listOrganisms","text":"","code":"listOrganisms()"},{"path":"https://patzaw.github.io/BED/reference/listOrganisms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists all the organisms available in the BED database — listOrganisms","text":"character vector organism scientific names","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/listPlatforms.html","id":null,"dir":"Reference","previous_headings":"","what":"Lists all the probe platforms available in the BED database — listPlatforms","title":"Lists all the probe platforms available in the BED database — listPlatforms","text":"Lists probe platforms available BED database","code":""},{"path":"https://patzaw.github.io/BED/reference/listPlatforms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lists all the probe platforms available in the BED database — listPlatforms","text":"","code":"listPlatforms(be = c(NA, listBe()))"},{"path":"https://patzaw.github.io/BED/reference/listPlatforms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lists all the probe platforms available in the BED database — listPlatforms","text":"character vector focus. NA (default) considered.","code":""},{"path":"https://patzaw.github.io/BED/reference/listPlatforms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lists all the probe platforms available in the BED database — listPlatforms","text":"data.frame mapping platforms following fields: name: platform nam description: platform description focus: Targeted ","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/listPlatforms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lists all the probe platforms available in the BED database — listPlatforms","text":"","code":"if (FALSE) { listPlatforms(be=\"Gene\") listPlatforms() }"},{"path":"https://patzaw.github.io/BED/reference/loadBE.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load biological entities in BED — loadBE","title":"Feeding BED: Load biological entities in BED — loadBE","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load biological entities in BED — loadBE","text":"","code":"loadBE(   d,   be = \"Gene\",   dbname,   version = NA,   deprecated = NA,   taxId = NA,   onlyId = FALSE )"},{"path":"https://patzaw.github.io/BED/reference/loadBE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load biological entities in BED — loadBE","text":"d data.frame information entities loaded. contain following fields: \"id\". boolean column named \"preferred\", value loaded. character corresponding type (default: \"Gene\") dbname DB ID taken version version DB IDs taken deprecated NA (default) date ID deprecated taxId taxonomy ID organism onlyId logical. TRUE, BEID created corresponding .","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBENames.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load names associated to BEIDs — loadBENames","title":"Feeding BED: Load names associated to BEIDs — loadBENames","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBENames.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load names associated to BEIDs — loadBENames","text":"","code":"loadBENames(d, be = \"Gene\", dbname)"},{"path":"https://patzaw.github.io/BED/reference/loadBENames.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load names associated to BEIDs — loadBENames","text":"d data.frame information names loaded. contain following fields: \"id\", \"name\". character corresponding type (default: \"Gene\") dbname DB BEID","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBESymbols.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load symbols associated to BEIDs — loadBESymbols","title":"Feeding BED: Load symbols associated to BEIDs — loadBESymbols","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBESymbols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load symbols associated to BEIDs — loadBESymbols","text":"","code":"loadBESymbols(d, be = \"Gene\", dbname)"},{"path":"https://patzaw.github.io/BED/reference/loadBESymbols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load symbols associated to BEIDs — loadBESymbols","text":"d data.frame information symbols loaded. contain following fields: \"id\", \"symbol\" \"canonical\" (optional). character corresponding type (default: \"Gene\") dbname DB BEID","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBEVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load biological entities in BED with information about DB version — loadBEVersion","title":"Feeding BED: Load biological entities in BED with information about DB version — loadBEVersion","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBEVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load biological entities in BED with information about DB version — loadBEVersion","text":"","code":"loadBEVersion(d, be = \"Gene\", dbname, taxId = NA, onlyId = FALSE)"},{"path":"https://patzaw.github.io/BED/reference/loadBEVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load biological entities in BED with information about DB version — loadBEVersion","text":"d data.frame information entities loaded. contain following fields: \"id\", \"version\" \"deprecated\". character corresponding type (default: \"Gene\") dbname DB ID taken taxId taxonomy ID organism onlyId logical. TRUE, BEID created corresponding .","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBeAttribute.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load attributes for biological entities in BED — loadBeAttribute","title":"Feeding BED: Load attributes for biological entities in BED — loadBeAttribute","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBeAttribute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load attributes for biological entities in BED — loadBeAttribute","text":"","code":"loadBeAttribute(d, be = \"Gene\", dbname, attribute)"},{"path":"https://patzaw.github.io/BED/reference/loadBeAttribute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load attributes for biological entities in BED — loadBeAttribute","text":"d data.frame providing ID (\"id\" column) attribute value (\"value\" column). can several values id. character corresponding type (default: \"Gene\") dbname DB ID taken attribute name attribute loaded","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBedModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load BED data model in neo4j — loadBedModel","title":"Feeding BED: Load BED data model in neo4j — loadBedModel","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBedModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load BED data model in neo4j — loadBedModel","text":"","code":"loadBedModel()"},{"path":"https://patzaw.github.io/BED/reference/loadBedOtherIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load additional indexes in neo4j — loadBedOtherIndexes","title":"Feeding BED: Load additional indexes in neo4j — loadBedOtherIndexes","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBedOtherIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load additional indexes in neo4j — loadBedOtherIndexes","text":"","code":"loadBedOtherIndexes()"},{"path":"https://patzaw.github.io/BED/reference/loadBedResult.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a BED query result from cache — loadBedResult","title":"Get a BED query result from cache — loadBedResult","text":"Internal use","code":""},{"path":"https://patzaw.github.io/BED/reference/loadBedResult.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a BED query result from cache — loadBedResult","text":"","code":"loadBedResult(name)"},{"path":"https://patzaw.github.io/BED/reference/loadBedResult.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a BED query result from cache — loadBedResult","text":"name name query","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/loadCodesFor.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load correspondance between genes and objects as coding events — loadCodesFor","title":"Feeding BED: Load correspondance between genes and objects as coding events — loadCodesFor","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadCodesFor.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load correspondance between genes and objects as coding events — loadCodesFor","text":"","code":"loadCodesFor(d, gdb, odb)"},{"path":"https://patzaw.github.io/BED/reference/loadCodesFor.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load correspondance between genes and objects as coding events — loadCodesFor","text":"d data.frame information coding events. contain following fields: \"gid\" \"oid\" gdb DB Gene IDs odb DB Object IDs","code":""},{"path":"https://patzaw.github.io/BED/reference/loadCorrespondsTo.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load correspondances between BE IDs — loadCorrespondsTo","title":"Feeding BED: Load correspondances between BE IDs — loadCorrespondsTo","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadCorrespondsTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load correspondances between BE IDs — loadCorrespondsTo","text":"","code":"loadCorrespondsTo(d, db1, db2, be = \"Gene\")"},{"path":"https://patzaw.github.io/BED/reference/loadCorrespondsTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load correspondances between BE IDs — loadCorrespondsTo","text":"d data.frame information correspondances loaded. contain following fields: \"id1\" \"id2\". db1 DB id1 db2 DB id2 character corresponding type (default: \"Gene\")","code":""},{"path":"https://patzaw.github.io/BED/reference/loadHistory.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load history of BEIDs — loadHistory","title":"Feeding BED: Load history of BEIDs — loadHistory","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadHistory.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load history of BEIDs — loadHistory","text":"","code":"loadHistory(d, dbname, be = \"Gene\")"},{"path":"https://patzaw.github.io/BED/reference/loadHistory.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load history of BEIDs — loadHistory","text":"d data.frame information history. contain following fields: \"old\" \"new\". dbname DB BEID character corresponding type (default: \"Gene\")","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsAssociatedTo.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load BE ID associations — loadIsAssociatedTo","title":"Feeding BED: Load BE ID associations — loadIsAssociatedTo","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsAssociatedTo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load BE ID associations — loadIsAssociatedTo","text":"","code":"loadIsAssociatedTo(d, db1, db2, be = \"Gene\")"},{"path":"https://patzaw.github.io/BED/reference/loadIsAssociatedTo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load BE ID associations — loadIsAssociatedTo","text":"d data.frame information associations loaded. contain following fields: \"id1\" \"id2\". end id1 associated id2 (way ). db1 DB id1 db2 DB id2 character corresponding type (default: \"Gene\")","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsAssociatedTo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Feeding BED: Load BE ID associations — loadIsAssociatedTo","text":"associating one id1 id2, identified id1 deleted production edges transferred identified id2. operation id \"corresponding_to\" id1  directly identify supposed . Thus, run function id1 involved \"corresponds_to\" edges.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsExpressedAs.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load correspondance between genes and transcripts as expression events — loadIsExpressedAs","title":"Feeding BED: Load correspondance between genes and transcripts as expression events — loadIsExpressedAs","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsExpressedAs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load correspondance between genes and transcripts as expression events — loadIsExpressedAs","text":"","code":"loadIsExpressedAs(d, gdb, tdb)"},{"path":"https://patzaw.github.io/BED/reference/loadIsExpressedAs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load correspondance between genes and transcripts as expression events — loadIsExpressedAs","text":"d data.frame information expression events. contain following fields: \"gid\", \"tid\" \"canonical\" (optional). gdb DB Gene IDs tdb DB Transcript IDs","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsHomologOf.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load homology between BE IDs — loadIsHomologOf","title":"Feeding BED: Load homology between BE IDs — loadIsHomologOf","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsHomologOf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load homology between BE IDs — loadIsHomologOf","text":"","code":"loadIsHomologOf(d, db1, db2, be = \"Gene\")"},{"path":"https://patzaw.github.io/BED/reference/loadIsHomologOf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load homology between BE IDs — loadIsHomologOf","text":"d data.frame information homologies loaded. contain following fields: \"id1\" \"id2\". db1 DB id1 db2 DB id2 character corresponding type (default: \"Gene\")","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsTranslatedIn.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load correspondance between transcripts and peptides as translation events — loadIsTranslatedIn","title":"Feeding BED: Load correspondance between transcripts and peptides as translation events — loadIsTranslatedIn","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadIsTranslatedIn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load correspondance between transcripts and peptides as translation events — loadIsTranslatedIn","text":"","code":"loadIsTranslatedIn(d, tdb, pdb)"},{"path":"https://patzaw.github.io/BED/reference/loadIsTranslatedIn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load correspondance between transcripts and peptides as translation events — loadIsTranslatedIn","text":"d data.frame information translation events. contain following fields: \"tid\", \"pid\" \"canonical\" (optional). tdb DB Transcript IDs pdb DB Peptide IDs","code":""},{"path":"https://patzaw.github.io/BED/reference/loadLuceneIndexes.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Create Lucene indexes in neo4j — loadLuceneIndexes","title":"Feeding BED: Create Lucene indexes in neo4j — loadLuceneIndexes","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadLuceneIndexes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Create Lucene indexes in neo4j — loadLuceneIndexes","text":"","code":"loadLuceneIndexes()"},{"path":"https://patzaw.github.io/BED/reference/loadNCBIEntrezGOFunctions.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load in BED GO functions associated to Entrez gene IDs from NCBI — loadNCBIEntrezGOFunctions","title":"Feeding BED: Load in BED GO functions associated to Entrez gene IDs from NCBI — loadNCBIEntrezGOFunctions","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadNCBIEntrezGOFunctions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load in BED GO functions associated to Entrez gene IDs from NCBI — loadNCBIEntrezGOFunctions","text":"","code":"loadNCBIEntrezGOFunctions(organism, reDumpThr = 1e+05, ddir, curDate)"},{"path":"https://patzaw.github.io/BED/reference/loadNCBIEntrezGOFunctions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load in BED GO functions associated to Entrez gene IDs from NCBI — loadNCBIEntrezGOFunctions","text":"organism character vector 1 element corresponding organism interest (e.g. \"Homo sapiens\") reDumpThr time difference threshold 2 downloads ddir path directory data saved curDate current date given Sys.Date","code":""},{"path":"https://patzaw.github.io/BED/reference/loadNcbiTax.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load taxonomic information from NCBI — loadNcbiTax","title":"Feeding BED: Load taxonomic information from NCBI — loadNcbiTax","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadNcbiTax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load taxonomic information from NCBI — loadNcbiTax","text":"","code":"loadNcbiTax(reDumpThr, ddir, orgOfInt = c(\"human\", \"rat\", \"mouse\"), curDate)"},{"path":"https://patzaw.github.io/BED/reference/loadNcbiTax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load taxonomic information from NCBI — loadNcbiTax","text":"reDumpThr time difference threshold 2 downloads ddir path directory data saved orgOfInt organisms interest: character vector curDate current date given Sys.Date","code":""},{"path":"https://patzaw.github.io/BED/reference/loadOrganisms.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load organisms in BED — loadOrganisms","title":"Feeding BED: Load organisms in BED — loadOrganisms","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadOrganisms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load organisms in BED — loadOrganisms","text":"","code":"loadOrganisms(d)"},{"path":"https://patzaw.github.io/BED/reference/loadOrganisms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load organisms in BED — loadOrganisms","text":"d data.frame 2 columns named \"tax_id\" \"name_txt\" providing taxonomic ID organism name","code":""},{"path":"https://patzaw.github.io/BED/reference/loadPlf.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load a probes platform — loadPlf","title":"Feeding BED: Load a probes platform — loadPlf","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadPlf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load a probes platform — loadPlf","text":"","code":"loadPlf(name, description, be)"},{"path":"https://patzaw.github.io/BED/reference/loadPlf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load a probes platform — loadPlf","text":"name name platform description description platform type targeted platform","code":""},{"path":"https://patzaw.github.io/BED/reference/loadProbes.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Load probes targeting BE IDs — loadProbes","title":"Feeding BED: Load probes targeting BE IDs — loadProbes","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/loadProbes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Load probes targeting BE IDs — loadProbes","text":"","code":"loadProbes(d, be = \"Transcript\", platform, dbname)"},{"path":"https://patzaw.github.io/BED/reference/loadProbes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Load probes targeting BE IDs — loadProbes","text":"d data.frame information entities loaded. contain following fields: \"id\" \"probeID\". character corresponding targeted probes (default: \"Transcript\") platform plateform gathering probes dbname DB ID taken","code":""},{"path":"https://patzaw.github.io/BED/reference/lsBedCache.html","id":null,"dir":"Reference","previous_headings":"","what":"List all the BED queries in cache and the total size of the cache — lsBedCache","title":"List all the BED queries in cache and the total size of the cache — lsBedCache","text":"List BED queries cache total size cache","code":""},{"path":"https://patzaw.github.io/BED/reference/lsBedCache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all the BED queries in cache and the total size of the cache — lsBedCache","text":"","code":"lsBedCache(verbose = TRUE)"},{"path":"https://patzaw.github.io/BED/reference/lsBedCache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"List all the BED queries in cache and the total size of the cache — lsBedCache","text":"verbose TRUE (default) prints message displaying total size cache","code":""},{"path":"https://patzaw.github.io/BED/reference/lsBedCache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"List all the BED queries in cache and the total size of the cache — lsBedCache","text":"data.frame giving query (row names) size Bytes (column \"size\") human readable format (column \"hr\"). attribute \"Total\" corresponds sum file size.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/lsBedConnections.html","id":null,"dir":"Reference","previous_headings":"","what":"List all registered BED connection — lsBedConnections","title":"List all registered BED connection — lsBedConnections","text":"List registered BED connection","code":""},{"path":"https://patzaw.github.io/BED/reference/lsBedConnections.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all registered BED connection — lsBedConnections","text":"","code":"lsBedConnections()"},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/metadata-set.html","id":null,"dir":"Reference","previous_headings":"","what":"Set object metadata — metadata<-","title":"Set object metadata — metadata<-","text":"Set object metadata","code":""},{"path":"https://patzaw.github.io/BED/reference/metadata-set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set object metadata — metadata<-","text":"","code":"metadata(x) <- value"},{"path":"https://patzaw.github.io/BED/reference/metadata-set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set object metadata — metadata<-","text":"x object representing collection BEID (e.g. BEIDList) value data.frame rownames column \".lname\" names l.","code":""},{"path":"https://patzaw.github.io/BED/reference/metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Get object metadata — metadata","title":"Get object metadata — metadata","text":"Get object metadata","code":""},{"path":"https://patzaw.github.io/BED/reference/metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get object metadata — metadata","text":"","code":"metadata(x, ...)"},{"path":"https://patzaw.github.io/BED/reference/metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get object metadata — metadata","text":"x object representing collection BEID (e.g. BEIDList) ... method specific parameters","code":""},{"path":"https://patzaw.github.io/BED/reference/registerBEDB.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Register a database of biological entities in BED DB — registerBEDB","title":"Feeding BED: Register a database of biological entities in BED DB — registerBEDB","text":"exported avoid unintended modifications DB.","code":""},{"path":"https://patzaw.github.io/BED/reference/registerBEDB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Register a database of biological entities in BED DB — registerBEDB","text":"","code":"registerBEDB(name, description = NA, currentVersion = NA, idURL = NA)"},{"path":"https://patzaw.github.io/BED/reference/registerBEDB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Register a database of biological entities in BED DB — registerBEDB","text":"name database (e.g. \"Ens_gene\") description short description database (e.g. \"Ensembl gene\") currentVersion version taken account BED (e.g. 83) idURL URL template use retrieve id information. '%s' corresponding ID present character vector length one.","code":""},{"path":"https://patzaw.github.io/BED/reference/scope.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the BEID scope of an object — scope","title":"Get the BEID scope of an object — scope","text":"Get BEID scope object","code":""},{"path":"https://patzaw.github.io/BED/reference/scope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the BEID scope of an object — scope","text":"","code":"scope(x, ...)"},{"path":"https://patzaw.github.io/BED/reference/scope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the BEID scope of an object — scope","text":"x object representing collection BEID (e.g. BEIDList) ... method specific parameters","code":""},{"path":"https://patzaw.github.io/BED/reference/scopes.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the BEID scopes of an object — scopes","title":"Get the BEID scopes of an object — scopes","text":"Get BEID scopes object","code":""},{"path":"https://patzaw.github.io/BED/reference/scopes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the BEID scopes of an object — scopes","text":"","code":"scopes(x, ...)"},{"path":"https://patzaw.github.io/BED/reference/scopes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the BEID scopes of an object — scopes","text":"x object representing collection BEID (e.g. BEIDList) ... method specific parameters","code":""},{"path":"https://patzaw.github.io/BED/reference/scopes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the BEID scopes of an object — scopes","text":"tibble 4 columns: source organism Freq","code":""},{"path":"https://patzaw.github.io/BED/reference/searchBeid.html","id":null,"dir":"Reference","previous_headings":"","what":"Search a BEID — searchBeid","title":"Search a BEID — searchBeid","text":"Search BEID","code":""},{"path":"https://patzaw.github.io/BED/reference/searchBeid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search a BEID — searchBeid","text":"","code":"searchBeid(x, clean_id_search = TRUE, clean_name_search = TRUE)"},{"path":"https://patzaw.github.io/BED/reference/searchBeid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search a BEID — searchBeid","text":"x character value search clean_id_search clean x avoid error ID search. Default: TRUE. Set false sure lucene query. clean_name_search clean x avoid error ID search. Default: TRUE. Set false sure lucene query.","code":""},{"path":"https://patzaw.github.io/BED/reference/searchBeid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search a BEID — searchBeid","text":"NULL match data.frame following columns: Value: matching term : type matched term (e.g. BESymbol, GeneID...) : matching biological entity () BEID: identifier Database: BEID reference database Preferred: TRUE BEID considered preferred identifier Symbol: BEID canonical symbol Name: BEID name Entity: technical identifier GeneID: Corresponding gene identifier Gene_DB: Gene ID database Preferred_gene: TRUE GeneID considered preferred identifier Gene_symbol: Gene symbol Gene_name: Gene name Gene_entity: technical gene identifier Organism: gene organism (scientific name)","code":""},{"path":"https://patzaw.github.io/BED/reference/searchId.html","id":null,"dir":"Reference","previous_headings":"","what":"Search identifier, symbol or name information — searchId","title":"Search identifier, symbol or name information — searchId","text":"DEPRECATED: use searchBeid geneIDsToAllScopes instead. function meant used getRelevantIds order implement dictonary identifiers interest. First searchId function used search term. getRelevantIds function used find corresponding ID context interest.","code":""},{"path":"https://patzaw.github.io/BED/reference/searchId.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search identifier, symbol or name information — searchId","text":"","code":"searchId(   searched,   be = NULL,   organism = NULL,   ncharSymb = 4,   ncharName = 8,   verbose = FALSE )"},{"path":"https://patzaw.github.io/BED/reference/searchId.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search identifier, symbol or name information — searchId","text":"searched searched term. Identifiers searched exact match. Symbols names also searched partial match searched greater ncharSymb ncharName respectively. optional. provided search focused provided BEs. organism optional.  provided search focused provided organisms. ncharSymb minimum number characters searched consider incomplete symbol matches. ncharName minimum number characters searched consider incomplete name matches. verbose boolean indicating CQL queries displayed","code":""},{"path":"https://patzaw.github.io/BED/reference/searchId.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search identifier, symbol or name information — searchId","text":"data frame following fields: found: element found BED corresponding searched term : type element source: source element organism: related organism entity: related entity internal ID ebe: related entity canonical: symbol canonical gene: list related genes internal ID Exact matches returned first folowed shortest elements.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/reference/setBedVersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Feeding BED: Set the BED version — setBedVersion","title":"Feeding BED: Set the BED version — setBedVersion","text":"exported avoid unintended modifications DB. function used modifying BED content.","code":""},{"path":"https://patzaw.github.io/BED/reference/setBedVersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Feeding BED: Set the BED version — setBedVersion","text":"","code":"setBedVersion(bedInstance, bedVersion)"},{"path":"https://patzaw.github.io/BED/reference/setBedVersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Feeding BED: Set the BED version — setBedVersion","text":"bedInstance instance BED set bedVersion version BED set","code":""},{"path":"https://patzaw.github.io/BED/reference/showBedDataModel.html","id":null,"dir":"Reference","previous_headings":"","what":"Show the data model of BED — showBedDataModel","title":"Show the data model of BED — showBedDataModel","text":"Show shema BED data model.","code":""},{"path":"https://patzaw.github.io/BED/reference/showBedDataModel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show the data model of BED — showBedDataModel","text":"","code":"showBedDataModel()"},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-152","dir":"Changelog","previous_headings":"","what":"Version 1.5.2","title":"Version 1.5.2","text":"Correction bug exploreBe() function Correction bug exploreConvPath() function","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-151","dir":"Changelog","previous_headings":"","what":"Version 1.5.1","title":"Version 1.5.1","text":"CRAN release: 2024-04-28","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"changes-1-5-1","dir":"Changelog","previous_headings":"","what":"Changes","title":"Version 1.5.1","text":"Correction bug dumping Ensembl data Generalization function download uniprot data","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-150","dir":"Changelog","previous_headings":"","what":"Version 1.5.0","title":"Version 1.5.0","text":"CRAN release: 2024-01-18","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"changes-1-5-0","dir":"Changelog","previous_headings":"","what":"Changes","title":"Version 1.5.0","text":"Support version 5 neo4j graph DB.","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-1413","dir":"Changelog","previous_headings":"","what":"Version 1.4.13","title":"Version 1.4.13","text":"CRAN release: 2023-03-02","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"changes-1-4-13","dir":"Changelog","previous_headings":"","what":"Changes","title":"Version 1.4.13","text":"Need explicitly call connectToBed() loading package (function automatically called package load anymore avoid warning message CRAN checks)","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-1412","dir":"Changelog","previous_headings":"","what":"Version 1.4.12","title":"Version 1.4.12","text":"CRAN release: 2023-02-16","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"bug-fix-1-4-12","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"Version 1.4.12","text":"compareBedInstances(): platform comparison","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"improvements-1-4-10","dir":"Changelog","previous_headings":"","what":"Improvements","title":"Version 1.4.10/11","text":"Improved display beidsModule findBeids() interfaces Default values focusOnScope() parameters Minor adjustments vignette","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"bug-fix-1-4-9","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"Version 1.4.9","text":"Make sure .character(metadata(BEIDList)$.lname)","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bed-1-4-9","dir":"Changelog","previous_headings":"","what":"Rebuild BED","title":"Version 1.4.9","text":"Chose ftp site dumpUniprotDb()","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-148","dir":"Changelog","previous_headings":"","what":"Version 1.4.8","title":"Version 1.4.8","text":"CRAN release: 2022-04-26","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"neo4j-changes-1-4-8","dir":"Changelog","previous_headings":"","what":"Neo4j changes","title":"Version 1.4.8","text":"connectToBed() supports .opts parameter RCurl::curlPerform().","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"neo4j-changes-1-4-7","dir":"Changelog","previous_headings":"","what":"Neo4j changes","title":"Version 1.4.7","text":"“CREATE UNIQUE” replaced “MERGE” neo4j queries","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"bug-fix-1-4-6","dir":"Changelog","previous_headings":"","what":"Bug fix","title":"Version 1.4.6","text":"Suppress wrong warning listBeIdSources()","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"improvements-1-4-5","dir":"Changelog","previous_headings":"","what":"Improvements","title":"Version 1.4.5","text":"Use https protocol getting NCBI data dumpNcbiTax: using zip archive instead tar.gz internal issue firewall. Correct canonical products Ensembl","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-144","dir":"Changelog","previous_headings":"","what":"Version 1.4.4","title":"Version 1.4.4","text":"CRAN release: 2021-03-12","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"improvements-1-4-4","dir":"Changelog","previous_headings":"","what":"Improvements","title":"Version 1.4.4","text":"convBeIds() getBeIdConvTable() additional parameter “canonical” keep canonical symbols converting symbols.","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bed-1-4-4","dir":"Changelog","previous_headings":"","what":"Rebuild BED","title":"Version 1.4.4","text":"dumpUniprotDb() uses less memory","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-143","dir":"Changelog","previous_headings":"","what":"Version 1.4.3","title":"Version 1.4.3","text":"CRAN release: 2021-01-05","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"complying-with-cran-policies-1-4-3","dir":"Changelog","previous_headings":"","what":"Complying with CRAN policies","title":"Version 1.4.3","text":"Software names single quotes (‘Neo4j’ ‘Docker’) title description fields DESCRIPTION file. Reference added description field DESCRIPTION file. Link ‘Docker’ image ‘Neo4j’ database added description field DESCRIPTION file. Author contribution declared Authors@R field DESCRIPTION file. Functions forgetBedConnection(), dumpEnsCore(), dumpNcbiDb(), dumpNcbiTax(), dumpUniprotDb(), getEnsemblGeneIds(), getEnsemblPeptideIds(), getEnsemblTranscriptIds(), getNcbiGeneTransPep(), getUniprot(), loadNCBIEntrezGOFunctions(), loadNcbiTax() functions write anymore default user’s home file space. explained documentation code comments, query results automatically written user’s home file space cache parameter set TRUE calling connectToBed() function (default parameter set FALSE).","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"bug-fixes-1-4-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Version 1.4.2","text":"Correction bug data returned listBeIdSources Type correction inner_join getting data","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"new-features-1-4-0","dir":"Changelog","previous_headings":"","what":"New features","title":"Version 1.4.0","text":"Shiny module: beidsServer() beidsUI() functions New Shiny gadget (RStudio addin): findBeids() guessIdOrigin() (still available) renamed guessIdScope(). takes account user input guess identifiers scope. scope identifiers convert explore automatically guessed provided user. still recommended provide known feature help exploratory session. beIDsToAllScopes() (specific geneIDsToAllScopes())","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-4-0","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.4.0","text":"default system remember connections policy reasons. default system use cache policy reasons. However, recommended set TRUE connecting improve speed recurent queries. merge() calls replaced dplyr::inner_join(). Import statements replaced much possible explicit :: calls.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"new-features-1-3-0","dir":"Changelog","previous_headings":"","what":"New features","title":"Version 1.3.0","text":"searchBeid() geneIDsToAllScopes()","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-3-0","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.3.0","text":"Simplification queries getting gene descriptions","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-3-0","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.3.0","text":"final package anymore Ensembl 100 Based neo4j-community-3.5.17 GO molecular functions included anymore (relevant tools used purpose)","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-2-4","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.2.4","text":"Correct bug chosing searchId Avoid application crash running neo4j instance (bug appeared version 2 neo2R)","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-2-3","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.2.3","text":"Ensembl 99 Based neo4j-community-3.5.14 NCBI support mapping unigene vega anymore. Unigene Vega identifiers available anymore BED well.","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-2-3","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.2.3","text":"Prepopulate nodes subset use ‘CALL db.resampleOutdatedIndexes();’ speed feeding process.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-2-2","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.2.2","text":"Ensembl 98 Based neo4j-community-3.5.11 https://www.ensembl.org/Homo_sapiens/Gene/Matches?g=ENSG00000120088","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-2-1","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.2.1","text":"Improving mapping function supporting difficult history Zebrafish Ensembl identifiers","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-2-0","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.2.0","text":"cleanDubiousXRef() function applied NCBI gene cross-references Ensembl","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-2-0","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.2.0","text":"Based neo4j-community-3.5.9 Add Danio rerio (zebrafish) support","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-1-9","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.1.9","text":"Correction findBe() result display Correction bug getBeIds() getRelevantIds() Implement BEIDList class","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-1-8","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.1.8 - Release notes - 2019-07-29","text":"Correction Ensembl data files pre-processed apparition “carriage return” () characters. Give write rights neo4j database copying docker image.","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-1-8","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.1.8 - Release notes - 2019-07-29","text":"Based neo4j-community-3.5.7 Ensembl 97","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-1-7","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.1.7 - Release notes - 2019-05-08","text":"associating one id another, identified first id deleted production edges transferred. operation id “corresponding_to” first id directly identify supposed . Thus, ’s recommended associate ID others.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"implementation-changes-1-1-6","dir":"Changelog","previous_headings":"","what":"Implementation changes","title":"Version 1.1.6 - Release notes - 2019-04-23","text":"Split toImport file bedImport function loading csv neo4j ==> improve robustness efficiency load Separate import nodes import edges avoid neo4j eager issues Add Sus scrofa support dumpUniprotDb function Ensembl history adapted avoid loop (found pig transcripts)","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-1-6","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.1.6 - Release notes - 2019-04-23","text":"Based neo4j-community-3.5.4 Ensembl 96 Add GPL6887 platform Add Sus scrofa (pig) support –env=NEO4J_cypher_min__replan__interval=100000000ms –env=NEO4J_cypher_statistics__divergence__threshold=1","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"methodological-changes-1-1-5","dir":"Changelog","previous_headings":"","what":"Methodological changes","title":"Version 1.1.5 - Release notes - 2019-01-30","text":"Improving case insentive conversion symbols","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-1-5","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.1.5 - Release notes - 2019-01-30","text":"Based neo4j-community-3.4.12 Ensembl 95","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"version-114---notes","dir":"Changelog","previous_headings":"","what":"Version 1.1.4 - notes","title":"Version 1.1.4 - notes","text":"Notes converting gene symbols BED vignette. Simplification feeding procedure based docker (see README.md)","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"bug-fixes-1-1-3","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Version 1.1.3 - notes","text":"Avoid duplicated lines returned convBeIds converting Symbols.","code":""},{"path":[]},{"path":"https://patzaw.github.io/BED/news/index.html","id":"methodological-changes-1-1-2","dir":"Changelog","previous_headings":"","what":"Methodological changes","title":"Version 1.1.2 - Release notes - 2018-07-20","text":"accurate ortholog mapping avoiding use deprecated gene identifiers convBeIds function.","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"vignettes-1-1-2","dir":"Changelog","previous_headings":"","what":"Vignettes","title":"Version 1.1.2 - Release notes - 2018-07-20","text":"BED: based bed-ucb-human:2018.07.20 (https://hub.docker.com/r/patzaw/bed-ucb-human/)","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"rebuild-bedrmd-1-1-2","dir":"Changelog","previous_headings":"","what":"Rebuild-BED.Rmd","title":"Version 1.1.2 - Release notes - 2018-07-20","text":"Based neo4j-community-3.4.4 Ensembl 93","code":""},{"path":"https://patzaw.github.io/BED/news/index.html","id":"bug-fixes-1-1-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"Version 1.1.2 - Release notes - 2018-07-20","text":"searchId: focusing one several ","code":""}]
